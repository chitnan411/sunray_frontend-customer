{"version":3,"sources":["utils/history.js","redux/actions/compareActions.js","utils/commonUtils.js","redux/actions/currencyActions.js","utils/renderToast.js","utils/constants.js","utils/actionTypes.js","redux/actions/cartActions.js","redux/reducers/cart/delete/deleteCartReducer.js","redux/reducers/cart/add/ssAddToCartReducer.js","redux/reducers/cart/delete/emptyCartReducer.js","redux/reducers/cart/ssGetCartReducer.js","redux/reducers/cart/update/ssUpdateCartReducer.js","redux/reducers/cart/index.js","redux/reducers/combo/ssSingleComboReducer.js","redux/reducers/currencyReducer.js","redux/reducers/product/ssSingleProductReducer.js","redux/reducers/productReducer.js","redux/actions/productActions.js","redux/reducers/cartReducer.js","redux/reducers/products/ssFeaturedProductsReducer.js","redux/reducers/wishlistReducer.js","redux/reducers/compareReducer.js","redux/reducers/auth/ssLoginReducer.js","redux/reducers/auth/ssForgotPasswordReducer.js","redux/reducers/auth/ssCreateNewPasswordReducer.js","redux/reducers/auth/ssValidateCreatePasswordLinkReducer.js","redux/reducers/auth/ssRegisterReducer.js","redux/reducers/auth/index.js","redux/reducers/categories/ssCategoriesReducer.js","redux/reducers/subCategories/ssSubCategoriesReducer.js","redux/reducers/brands/ssBrandsReducer.js","redux/reducers/products/ssProductsReducer.js","redux/reducers/combos/ssCombosReducer.js","redux/reducers/comboCategories/ssComboCategoriesReducer.js","redux/reducers/rootReducer.js","helpers/scroll-top.js","App.js","serviceWorker.js","index.js","components/HOC/ssUserAuthRoutes.js","redux/actions/wishlistActions.js"],"names":["history","createBrowserHistory","ADD_TO_COMPARE","DELETE_FROM_COMPARE","addToCompare","item","addToast","dispatch","appearance","autoDismiss","type","payload","deleteFromCompare","validateEmail","email","test","String","toLowerCase","validatePhone","phone","phoneNumber","replace","length","validatePassword","password","isObjectEmpty","requestedObject","undefined","Object","keys","isNotEmptyObject","justStrings","value","emailAvailability","a","axios","post","apiRootUrl","headers","Accept","then","response","console","log","data","confirmation","message","catch","error","emailAttemptResponse","emailAvailabilityForNewUser","registerEmailAttemptResponse","shuffleArray","array","i","j","Math","floor","random","temp","getPrice","product","price","crazyDealPrice","Date","crazyDealStartDate","getTime","crazyDealExpiryDate","offeredPrice","offerStartDate","offerExpiryDate","parseFloat","getPercentageCount","offerPrice","originalPrice","percentageCount","round","SET_CURRENCY","setCurrency","currencyName","get","rates","currencyRate","rate","err","renderToast","position","toastOptions","success","style","background","maxWidth","color","padding","fontSize","ssClientCryptoSecretKey","ssClientAuthFlagCookieKey","ssClientAuthCookieKey","setUserDataCookieKey","SIGN_IN_REQUEST","SIGN_OUT_REQUEST","SIGN_IN_COOKIE_SET","SIGN_IN_REQUEST_SUCCESS","SIGN_IN_REQUEST_FAILED","REGISTER_USER_REQUEST","REGISTER_USER_REQUEST_SUCCESS","REGISTER_USER_REQUEST_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_REQUEST_SUCCESS","FORGOT_PASSWORD_REQUEST_FAILED","FORGOT_PASSWORD_REQUEST_CLEAR","VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST","VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_SUCCESS","VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_FAILED","CREATE_NEW_PASSWORD_REQUEST","CREATE_NEW_PASSWORD_REQUEST_SUCCESS","CREATE_NEW_PASSWORD_REQUEST_FAILED","GET_CATEGORIES_REQUEST","GET_CATEGORIES_REQUEST_SUCCESS","GET_CATEGORIES_REQUEST_FAILED","GET_SUB_CATEGORIES_REQUEST","GET_SUB_CATEGORIES_REQUEST_SUCCESS","GET_SUB_CATEGORIES_REQUEST_FAILED","GET_BRANDS_REQUEST","GET_BRANDS_REQUEST_SUCCESS","GET_BRANDS_REQUEST_FAILED","GET_PRODUCT_REQUEST","GET_PRODUCT_REQUEST_SUCCESS","GET_PRODUCT_REQUEST_FAILED","CLEAN_STATE_GET_PRODUCT_REQUEST","GET_PRODUCTS_REQUEST","GET_PRODUCTS_REQUEST_SUCCESS","GET_PRODUCTS_REQUEST_FAILED","GET_FEATURED_PRODUCTS_REQUEST","GET_FEATURED_PRODUCTS_REQUEST_SUCCESS","GET_FEATURED_PRODUCTS_REQUEST_FAILED","GET_COMBO_CATEGORIES_REQUEST","GET_COMBO_CATEGORIES_REQUEST_SUCCESS","GET_COMBO_CATEGORIES_REQUEST_FAILED","GET_COMBOS_REQUEST","GET_COMBOS_REQUEST_SUCCESS","GET_COMBOS_REQUEST_FAILED","GET_COMBO_REQUEST","GET_COMBO_REQUEST_SUCCESS","GET_COMBO_REQUEST_FAILED","CLEAN_GET_COMBO_REQUEST","ADD_TO_SS_CART_REQUEST","ADD_TO_SS_CART_REQUEST_SUCCESS","ADD_TO_SS_CART_REQUEST_FAILED","GET_SS_CART_REQUEST","GET_SS_CART_REQUEST_SUCCESS","GET_SS_CART_REQUEST_FAILED","UPDATE_SS_CART_REQUEST","UPDATE_SS_CART_REQUEST_SUCCESS","UPDATE_SS_CART_REQUEST_FAILED","DELETE_FROM_SS_CART_REQUEST","DELETE_FROM_SS_CART_REQUEST_SUCCESS","DELETE_FROM_SS_CART_REQUEST_FAILED","SEND_EMPTY_USER_CART_REQUEST","SEND_EMPTY_USER_CART_REQUEST_SUCCESS","SEND_EMPTY_USER_CART_REQUEST_FAILED","RESET_DELETE_CART_USER_STATE","DELETE_ITEM_FROM_STATE_REQUEST","EMPTY_USER_CART_REQUEST","ADD_TO_CART","SET_USER_CART_DATA","DECREASE_QUANTITY","DELETE_FROM_CART","DELETE_ALL_FROM_CART","UPDATE_IS_AVAILABLE","EMPTY_CART","UPDATE_IS_ADDED_TO_USER_CART","addToCart","isAddedToUserCart","showAlert","quantityCount","selectedProductColor","selectedProductSize","quantity","isAvailable","setUserCartData","updateIsAvailable","updateIsAddedToUserCart","decreaseQuantity","deleteFromCart","itemForDelete","deleteAllFromCart","emptyCart","cartItemStock","size","stock","variation","filter","single","name","initialState","deleteFromSSCartRequestPending","deleteFromSSCartSuccess","deleteFromSSCartFailure","deleteFromSSCartFailurePayload","deleteFromSSCartSuccessPayload","addToSSCartRequestPending","addToSSCartSuccess","addToSSCartFailure","addToSSCartFailurePayload","addToSSCartSuccessPayload","emptyUserCartRequestPending","emptyUserCartSuccess","emptyUserCartFailure","emptyUserCartFailurePayload","emptyUserCartSuccessPayload","getCartRequestPending","getCartSuccess","getCartFailure","getCartFailurePayload","cartItems","updateSSCartRequestPending","updateSSCartSuccess","updateSSCartFailure","updateSSCartFailurePayload","updateSSCartSuccessPayload","ssCartReducers","combineReducers","ssCartData","state","action","types","itemId","tempItems","finalItems","_id","ssAddToCart","ssUpdateCart","ssDeleteFromCart","ssEmptyUserCart","getSingleComboRequestPending","getSingleComboSuccess","getSingleComboFailure","getSingleComboFailurePayload","comboDocument","initState","currencySymbol","currencyReducer","getSingleProductRequestPending","getSingleProductSuccess","getSingleProductFailure","getSingleProductFailurePayload","productDocument","products","productReducer","cartReducer","cartItem","toast","marginBottom","backgroundColor","cartItemId","uuid","map","id","updatedItems","tempCartItems","updatedItemIndex","findIndex","singleItem","remainingItems","tempList","filteredList","getProductsRequestPending","getProductsSuccess","getProductsFailure","getProductsFailurePayload","wishlistReducer","wishlistItems","ADD_TO_WISHLIST","wishlistItem","DELETE_FROM_WISHLIST","DELETE_ALL_FROM_WISHLIST","compareReducer","compareItems","compareItem","signInRequestPending","signInSuccess","signInCookieSet","signInFailure","signInFailurePayload","signInSuccessPayload","forgotPasswordRequestPending","forgotPasswordSuccess","forgotPasswordFailure","forgotPasswordFailurePayload","forgotPasswordSuccessPayload","createNewPasswordRequestPending","createNewPasswordSuccess","createNewPasswordFailure","createNewPasswordFailurePayload","createNewPasswordSuccessPayload","validateCreatePasswordLinkRequestPending","validateCreatePasswordLinkSuccess","validateCreatePasswordLinkFailure","validateCreatePasswordLinkFailurePayload","validateCreatePasswordLinkSuccessPayload","registerUserRequestPending","registerUserSuccess","registerUserFailure","registerUserFailurePayload","registerUserSuccessPayload","authReducers","ssSignIn","ssRegisterUser","ssForgotPassword","ssCreateNewPassword","ssValidateCreateNewPassword","getCategoriesRequestPending","getCategoriesSuccess","getCategoriesFailure","getCategoriesFailurePayload","productCategories","getSubCategoriesRequestPending","getSubCategoriesSuccess","getSubCategoriesFailure","getSubCategoriesFailurePayload","productSubCategories","getBrandsRequestPending","getBrandsSuccess","getBrandsFailure","getBrandsFailurePayload","productBrands","getCombosRequestPending","getCombosSuccess","getCombosFailure","getCombosFailurePayload","combos","getComboCategoriesRequestPending","getComboCategoriesSuccess","getComboCategoriesFailure","getComboCategoriesFailurePayload","comboCategories","rootReducer","multilanguage","createMultilanguageReducer","currentLanguageCode","currencyData","productData","cartData","auth","authReducer","categories","subCategories","brands","ssCart","singleProduct","singleCombo","featuredProducts","wishlistData","compareData","withRouter","props","useEffect","window","scrollTo","children","HomeFashion","lazy","BrandsList","CombosGridLayout","ProductGridLayout","Product","Combo","About","Terms","Contact","MyAccount","Login","GuestCheckout","Register","ForgotPassword","CreatePassword","LoginCheckout","Cart","Checkout","NotFound","connect","loadLanguages","languages","en","require","fn","de","placement","fallback","className","exact","path","component","render","routeProps","key","match","params","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","load","composeWithDevTools","applyMiddleware","thunk","save","fetchProductsSuccess","fetchProducts","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","SSAuthenticatedRoute","Component","rest","fullLayout","isAuthenticated","Cookies","to","pathname","from","SSUnAuthenticatedRoute","queryParams","queryString","parse","search","addToWishlist","deleteFromWishlist","deleteAllFromWishlist"],"mappings":"kHAAA,8CACWA,EAAUC,e,iCCDrB,wIAAO,IAAMC,EAAiB,iBACjBC,EAAsB,sBAGtBC,EAAe,SAACC,EAAMC,GACjC,OAAO,SAAAC,GACDD,GACFA,EAAS,mBAAoB,CAC3BE,WAAY,UACZC,aAAa,IAGjBF,EAAS,CAAEG,KAAMR,EAAgBS,QAASN,MAKjCO,EAAoB,SAACP,EAAMC,GACtC,OAAO,SAAAC,GACDD,GACFA,EAAS,uBAAwB,CAC/BE,WAAY,QACZC,aAAa,IAGjBF,EAAS,CAAEG,KAAMP,EAAqBQ,QAASN,O,6fCnBtCQ,EAAgB,SAAAC,GAE3B,MADmB,0KACDC,KAAKC,OAAOF,GAAOG,gBAI1BC,EAAgB,SAAAC,GAC3B,IAAMC,EAAcD,EAAME,QAAS,OAAQ,IAC3C,GAAID,EAAYE,OAAS,EACzB,CAEE,MADoB,sFACFP,KAAKK,GAGvB,OAAO,GAIEG,EAAmB,SAAAC,GAG9B,MADsB,gDACDT,KAAKC,OAAOQ,KAmBtBC,EAAgB,SAACC,GAC5B,YAAsBC,GAAnBD,IAAiCA,GAAsC,MAAnBA,GAGP,IAAxCE,OAAOC,KAAKH,GAAiBJ,QAS1BQ,EAAmB,SAACJ,GAC/B,YAAsBC,GAAnBD,GAAmD,IAAnBA,GAA4C,MAAnBA,IAGZ,IAAxCE,OAAOC,KAAKH,GAAiBJ,QAGW,IAAxCM,OAAOC,KAAKH,GAAiBJ,SA2C1BS,EAAc,SAACC,GAE1B,MADwB,gBACDjB,KAAKC,OAAOgB,KAiFxBC,EAAiB,uCAAG,WAAOnB,GAAP,eAAAoB,EAAA,sEACIC,IAAMC,KAAN,UAC5BC,IAD4B,kBACD,CAC5BvB,MAAQA,GACP,CACDwB,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGdC,MAAK,SAAUC,GAEf,OADAC,QAAQC,IAAI,oBAAoBF,KAC7BA,GAC0C,0BAAvCA,EAASG,KAAKC,aAAaC,WAUhCC,OAAM,SAAUC,GACjB,OAAO,KAxBsB,cACzBC,EADyB,yBA0BxBA,GA1BwB,2CAAH,sDA8BjBC,EAA2B,uCAAG,WAAOpC,GAAP,eAAAoB,EAAA,sEACEC,IAAMC,KAAN,UACpCC,IADoC,yBACF,CACnCvB,MAAQA,GACP,CACDwB,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGdC,MAAK,SAAUC,GAEf,OADAC,QAAQC,IAAI,oBAAoBF,KAC7BA,GAC0C,6BAAvCA,EAASG,KAAKC,aAAaC,WAUhCC,OAAM,SAAUC,GACjB,OAAO,KAxBgC,cACnCG,EADmC,yBA0BlCA,GA1BkC,2CAAH,sDAmH3BC,EAAe,SAACC,GAC3B,IAAK,IAAIC,EAAID,EAAM/B,OAAS,EAAGgC,EAAI,EAAGA,IAAK,CAGzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IAEpCK,EAAON,EAAMC,GACjBD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKI,EAEb,OAAON,GAmFIO,EAAW,SAACC,GACvB,IAAIC,EAAQ,EAaZ,OATEA,EAFKD,GAAWA,EAAQE,gBAAmB,IAAIC,KAAKH,GAAWA,EAAQI,oBAAoBC,YAAa,IAAIF,MAAOE,WAAc,IAAIF,KAAKH,GAAWA,EAAQM,qBAAqBD,YAAa,IAAIF,MAAOE,UAElML,EAAQE,eAEPF,GAAWA,EAAQO,cAAmB,IAAIJ,KAAKH,GAAWA,EAAQQ,gBAAgBH,YAAa,IAAIF,MAAOE,WAAiB,IAAIF,KAAKH,GAAWA,EAAQS,iBAAiBJ,YAAa,IAAIF,MAAOE,UAEjML,EAAQO,aAGRP,EAAQC,MAEXS,WAAWT,IAIPU,EAAqB,SAACX,GACjC,GAAGA,EAAS,CACV,IAAIY,EAAcZ,GAAWA,EAAQO,cAAkBP,GAAWA,EAAQE,eACtEW,EAAgBb,GAAWA,EAAQC,MAEnCa,GADYJ,WAAWG,GAAiBH,WAAWE,IACpBF,WAAWG,GAAmB,IACjE,OAAOlB,KAAKoB,MAAMD,M,iCCtctB,yFACaE,EAAe,eAEfC,EAAc,SAAAC,GACzB,OAAO,SAAAxE,GACL4B,IACG6C,IADH,mDAEGxC,MAAK,SAAAC,GACJ,IAAMwC,EAAQxC,EAASG,KAAKqC,MACxBC,EAAe,EACnB,IAAK,IAAMC,KAAQF,EACbE,IAASJ,IACXG,EAAeD,EAAME,IAGzB5E,EAAS,CACPG,KAAMmE,EACNlE,QAAS,CAAEoE,eAAcG,qBAG5BnC,OAAM,SAAAqC,GACL1C,QAAQC,IAAI,UAAWyC,S,iCCrB/B,8DAIaC,EAAc,WAC1B,OACI,kBAAC,IAAD,CACIC,SAAS,gBACTC,aAAc,CACVC,QAAS,CACLC,MAAO,CACHC,WAAY,UACZC,SAAU,cACVC,MAAO,OACPC,QAAS,aACTC,SAAU,SAGlB9C,MAAO,CACHyC,MAAO,CACHC,WAAY,UACZC,SAAU,cACVC,MAAO,OACPC,QAAS,aACTC,SAAU,c,m9jJCxB/B,0KAEO,IAAMzD,EAAa,mCACb0D,EAA0B,aAC1BC,EAA4B,QAC5BC,EAAwB,iBACxBC,EAAuB,O,qECNpC,6rEAKO,IAAMC,EAAkB,kBAClBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAA0B,0BAC1BC,EAAyB,yBAGzBC,EAAwB,wBACxBC,EAAgC,gCAChCC,EAA+B,+BAI/BC,EAA0B,0BAC1BC,EAAkC,kCAClCC,EAAiC,iCACjCC,EAAgC,gCAGhCC,EAA4C,4CAC5CC,EAAoD,oDACpDC,EAAmD,mDAGnDC,EAA8B,8BAC9BC,EAAsC,sCACtCC,EAAqC,qCAWrCC,EAAyB,yBACzBC,EAAiC,iCACjCC,EAAgC,gCAOhCC,EAA6B,6BAC7BC,EAAqC,qCACrCC,EAAoC,oCAiBpCC,EAAqB,qBACrBC,EAA6B,6BAC7BC,EAA4B,4BAQ5BC,EAAsB,sBACtBC,EAA8B,8BAC9BC,EAA6B,6BAC7BC,EAAkC,kCAGlCC,EAAuB,uBACvBC,EAA+B,+BAC/BC,EAA8B,8BAG9BC,EAAgC,gCAChCC,EAAwC,wCACxCC,EAAuC,uCAYvCC,EAA+B,+BAC/BC,EAAuC,uCACvCC,EAAsC,sCAQtCC,EAAqB,qBACrBC,EAA6B,6BAC7BC,EAA4B,4BAE5BC,EAAoB,oBACpBC,EAA4B,4BAC5BC,EAA2B,2BAC3BC,EAA0B,0BAmF1BC,EAAyB,yBACzBC,EAAiC,iCACjCC,EAAgC,gCAEhCC,EAAsB,sBACtBC,GAA8B,8BAC9BC,GAA6B,6BAE7BC,GAAyB,yBACzBC,GAAiC,iCACjCC,GAAgC,gCAEhCC,GAA8B,8BAC9BC,GAAsC,sCACtCC,GAAqC,qCAErCC,GAA+B,+BAC/BC,GAAuC,uCACvCC,GAAsC,sCAEtCC,GAA+B,+BAC/BC,GAAiC,iCACjCC,GAA0B,2B,6mBCjO1BC,G,MAAc,eACdC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAa,aACbC,EAA+B,+BAG/BC,EAAY,SAACvK,EAAMwK,EAAmBC,EAAWxK,EAAUyK,EAAeC,EAAqBC,GAQ1G,OANAvI,QAAQC,IAAIoI,EAAc,wGAMnB,SAACxK,GACNA,EAAS,CACPG,KAAM0J,EACNzJ,QAAQ,2BACHN,GADE,IAEL6K,SAAUH,EACVI,aAAa,EACbL,UAAWA,EACXD,kBAAmBA,EACnBG,qBAAsBA,IAEhB3K,EAAK2K,qBACD3K,EAAK2K,qBACL,MACVC,oBAAqBA,IAEf5K,EAAK4K,oBACD5K,EAAK4K,oBACL,YAOLG,EAAkB,SAACxI,GAE9B,OADAF,QAAQC,IAAIC,EAAK,8DACV,SAACrC,GACNA,EAAS,CAAEG,KAAM2J,EAAoB1J,QAASiC,MAMrCyI,EAAoB,SAACzI,GAEhC,OADAF,QAAQC,IAAIC,EAAK,8DACV,SAACrC,GACNA,EAAS,CAAEG,KAAM+J,EAAqB9J,QAASiC,MAMtC0I,EAA0B,SAAC1I,GAGtC,OAFAF,QAAQC,IAAIC,EAAK,8DAEV,SAACrC,GACNA,EAAS,CAAEG,KAAMiK,EAA8BhK,QAASiC,MAO/C2I,EAAmB,SAAClL,EAAMC,GACrC,OAAO,SAACC,GACRA,EAAS,CAAEG,KAAM4J,EAAmB3J,QAASN,MAIlCmL,EAAiB,SAACC,EAAenL,GAE5C,OADAoC,QAAQC,IAAI8I,EAAc,gDACnB,SAAClL,GACNA,EAAS,CAAEG,KAAM6J,EAAkB5J,QAAS8K,MAInCC,EAAoB,SAACpL,GAChC,OAAO,SAACC,GAGNA,EAAS,CAAEG,KAAM8J,MAKRmB,EAAY,WACvB,OAAO,SAACpL,GACNA,EAAS,CAAEG,KAAMgK,MAKRkB,EAAgB,SAACvL,EAAMuF,EAAOiG,GACzC,OAAIxL,EAAKyL,MACAzL,EAAKyL,MACHzL,EAAK0L,UACP1L,EAAK0L,UACPC,QAAO,SAACC,GAAD,OAAYA,EAAOrG,QAAUA,KAAO,GAC3CiG,KAAKG,QAAO,SAACC,GAAD,OAAYA,EAAOC,OAASL,KAAM,GAAGC,WAHjD,I,6vPCxGHK,EAAe,CACjBC,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,+BAAgC,ICL9BL,EAAe,CACjBM,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,EACpBC,0BAA2B,GAC3BC,0BAA2B,ICLzBV,EAAe,CACjBW,6BAA6B,EAC7BC,sBAAsB,EACtBC,sBAAsB,EACtBC,4BAA6B,GAC7BC,4BAA6B,I,QCL3Bf,EAAe,CACjBgB,uBAAuB,EACvBC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAuB,GACvBC,UAAW,ICLTpB,EAAe,CACjBqB,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBC,2BAA4B,GAC5BC,2BAA4B,ICAnBC,EAAiBC,0BAAgB,CAC1CC,WFE2B,WAAmC,IAAlCC,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC7D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIb,uBAAuB,EACvBC,gBAAgB,EAChBC,gBAAgB,EAChBE,UAAW,KAEnB,KAAKW,IACD,OAAGD,EAAOtN,QACC,2BACAqN,GADP,IAEIb,uBAAuB,EACvBC,gBAAgB,EAChBC,gBAAgB,EAChBE,UAAWU,EAAOtN,UAIf,2BACAqN,GADP,IAEIb,uBAAuB,EACvBC,gBAAgB,EAChBC,gBAAgB,EAChBE,UAAW,KAGvB,KAAKW,IACD,OAAO,2BACAF,GADP,IAEIX,gBAAgB,EAChBD,gBAAgB,EAChBD,uBAAuB,EACvBG,sBAAuBW,EAAOtN,UAEtC,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEIb,uBAAuB,EACvBC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAuB,GACvBC,UAAW,KAEnB,KAAKW,IACD,IAAIC,EAASF,EAAOtN,QAChByN,EAAS,YAAOJ,EAAMT,WACtBc,EAAaD,EAAUpC,QAAO,SAAA3L,GAAI,OAAIA,EAAKiO,MAAQH,KACvD,OAAO,2BACAH,GADP,IAEIb,uBAAuB,EACvBC,gBAAgB,EAChBC,gBAAgB,EAChBC,sBAAuB,GACvBC,UAAU,YAAKc,KAEvB,QACI,OAAOL,IE5DfO,YJCuB,WAAmC,IAAlCP,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACzD,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIvB,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,IAE5B,KAAKuB,IACD,OAAO,2BACAF,GADP,IAEIvB,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,EACpBE,0BAA2BoB,EAAOtN,UAE1C,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEIrB,oBAAoB,EACpBD,oBAAoB,EACpBD,2BAA2B,EAC3BG,0BAA2BqB,EAAOtN,UAE1C,QACI,OAAOqN,II1BfQ,aDAwB,WAAmC,IAAlCR,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC1D,OAAOA,EAAOvN,MACV,KAAKwN,KACD,OAAO,2BACAF,GADP,IAEIR,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,IAE7B,KAAKQ,KACD,OAAO,2BACAF,GADP,IAEIR,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBE,2BAA4BK,EAAOtN,UAE3C,KAAKuN,KACD,OAAO,2BACAF,GADP,IAEIN,qBAAqB,EACrBD,qBAAqB,EACrBD,4BAA4B,EAC5BG,2BAA4BM,EAAOtN,UAE3C,QACI,OAAOqN,ICzBfS,iBLD4B,WAAmC,IAAlCT,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC9D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEI5B,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,IAEjC,KAAK4B,IACD,OAAO,2BACAF,GADP,IAEI5B,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBE,+BAAgCyB,EAAOtN,UAE/C,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEI1B,yBAAyB,EACzBD,yBAAyB,EACzBD,gCAAgC,EAChCG,+BAAgC0B,EAAOtN,UAE/C,QACI,OAAOqN,IKxBfU,gBHF2B,WAAmC,IAAlCV,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC7D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIlB,6BAA6B,EAC7BC,sBAAsB,EACtBC,sBAAsB,IAE9B,KAAKkB,KACD,OAAO,2BACAF,GADP,IAEIlB,6BAA6B,EAC7BC,sBAAsB,EACtBC,sBAAsB,EACtBE,4BAA6Be,EAAOtN,UAE5C,KAAKuN,KACD,OAAO,2BACAF,GADP,IAEIhB,sBAAsB,EACtBD,sBAAsB,EACtBD,6BAA6B,EAC7BG,4BAA6BgB,EAAOtN,UAE5C,QACI,OAAOqN,MIlCb7B,EAAe,CACjBwC,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,cAAe,I,SCLbC,EAAY,CAChBC,eAAgB,SAChBlK,aAAc,MACdG,aAAc,GAoCDgK,EAjCS,WAAgC,IAA/BlB,EAA8B,uDAAtBgB,EAAWf,EAAW,uCACrD,GAAIA,EAAOvN,OAASmE,IAAc,CAChC,IAAME,EAAekJ,EAAOtN,QAAQoE,aAEpC,GAAqB,QAAjBA,EACF,OAAO,2BACFiJ,GADL,IAEEiB,eAAgB,IAChB/J,aAAc+I,EAAOtN,QAAQuE,aAC7BH,iBAGJ,GAAqB,QAAjBA,EACF,OAAO,2BACFiJ,GADL,IAEEiB,eAAgB,SAChB/J,aAAc+I,EAAOtN,QAAQuE,aAC7BH,iBAGJ,GAAqB,QAAjBA,EACF,OAAO,2BACFiJ,GADL,IAEEiB,eAAgB,OAChB/J,aAAc+I,EAAOtN,QAAQuE,aAC7BH,iBAKN,OAAOiJ,GCpCH7B,EAAe,CACjBgD,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,gBAAiB,ICLfP,EAAY,CAChBQ,SAAU,IAcGC,EAXQ,WAAgC,IAA/BzB,EAA8B,uDAAtBgB,EAAWf,EAAW,uCACpD,MCPoC,2BDOhCA,EAAOvN,KACF,2BACFsN,GADL,IAEEwB,SAAUvB,EAAOtN,UAIdqN,G,0BELHgB,EAAY,GA0MHU,EAxMK,WAAgC,IAA/B1B,EAA8B,uDAAtBgB,EAAWf,EAAW,uCAC3CV,EAAYS,EAChBnK,EAAUoK,EAAOtN,QAEnB,GAAIsN,EAAOvN,OAAS0J,IAAa,CAE/B,QAA0BzI,IAAtBkC,EAAQkI,UAAyB,CAEnC,IAAM4D,EAAWpC,EAAUvB,QAAO,SAAC3L,GAAD,OAAUA,EAAKiO,MAAQzK,EAAQyK,OAAK,GAEtE,YAAiB3M,IAAbgO,GAEC9L,EAAQiH,WACT8E,IAAMpK,QAAQ,gBAAgB,CAACC,MAAM,CAACoK,aAAc,OAAQC,gBAAiB,aAGzE,GAAN,mBACKvC,GADL,4BAGO1J,GAHP,IAIIqH,SAAUrH,EAAQqH,SAAWrH,EAAQqH,SAAW,EAChD6E,WAAYC,YAObnM,EAAQiH,UAYJyC,EAAU0C,KAAI,SAAC5P,GAAD,OACnBA,EAAK0P,aAAeJ,EAASI,WAA7B,2BAES1P,GAFT,IAGM6K,SAAUrH,EAAQqH,SACd7K,EAAK6K,SAAWrH,EAAQqH,SACxB7K,EAAK6K,SAAW,IAEtB7K,MAKR,IAAMsP,EAAWpC,EAAUvB,QACzB,SAAC3L,GAAD,OACEA,EAAKiO,MAAQzK,EAAQyK,KACrBzK,EAAQmH,sBACRnH,EAAQmH,uBAAyB3K,EAAK2K,sBACtCnH,EAAQoH,qBACRpH,EAAQoH,sBAAwB5K,EAAK4K,uBACpCpH,EAAQkM,YAAalM,EAAQkM,aAAe1P,EAAK0P,eACpD,GAEF,YAAiBpO,IAAbgO,EACI,GAAN,mBACKpC,GADL,4BAGO1J,GAHP,IAIIqH,SAAUrH,EAAQqH,SAAWrH,EAAQqH,SAAW,EAChD6E,WAAYC,eAIHrO,IAAbgO,GACCA,EAAS3E,uBAAyBnH,EAAQmH,sBACzC2E,EAAS1E,sBAAwBpH,EAAQoH,oBAWpCsC,EAAU0C,KAAI,SAAC5P,GAAD,OACnBA,EAAK0P,aAAeJ,EAASI,WAA7B,2BAES1P,GAFT,IAGM6K,SAAUrH,EAAQqH,SACd7K,EAAK6K,SAAWrH,EAAQqH,SACxB7K,EAAK6K,SAAW,EACpBF,qBAAsBnH,EAAQmH,qBAC9BC,oBAAqBpH,EAAQoH,sBAE/B5K,KAnBA,GAAN,mBACKkN,GADL,4BAGO1J,GAHP,IAIIqH,SAAUrH,EAAQqH,SAAWrH,EAAQqH,SAAW,EAChD6E,WAAYC,UAoBtB,GAAI/B,EAAOvN,OAAS+J,IAAqB,CAAC,IAAD,EACbwD,EAAOtN,QAA1BuP,EADgC,EAChCA,GAAI/E,EAD4B,EAC5BA,YACXzI,QAAQC,IAAI,+CAA+CsL,EAAOtN,SAClE,IAAMwP,EAAe5C,EAAU0C,KAAI,SAAA5P,GACjC,OAAGA,EAAKiO,MAAQ4B,GACd7P,EAAI,YAAkB8K,EACf9K,GAGAA,KAGX,OAAO,YAAI8P,GAIb,GAAIlC,EAAOvN,OAASiK,IAA8B,CAChDjI,QAAQC,IAAI,+CAA+CsL,EAAOtN,SADlB,MAEhBsN,EAAOtN,QAAhCuP,EAFyC,EAEzCA,GAAIrF,EAFqC,EAErCA,kBACLuF,EAAa,YAAO7C,GACpB8C,EAAmB9C,EAAU+C,WAAU,SAAAC,GAAU,OAAIA,EAAWjC,MAAQ4B,KAK9E,OAJAE,EAAcC,GAAd,2BACKD,EAAcC,IADnB,IAEExF,kBAAmBA,IAEd,YAAIuF,GAGb,GAAInC,EAAOvN,OAAS2J,IAAoB,CACtC,IAAM+F,EAAa,YAAOnC,EAAOtN,SACjC,OAAO,YAAIyP,GAGb,GAAInC,EAAOvN,OAAS4J,IAAmB,CAGrC,GAAyB,IAArBzG,EAAQqH,SAAgB,CAC1B0E,IAAMpK,QAAQ,oBAAoB,CAChCC,MAAM,CACJoK,aAAc,OACdC,gBAAiB,aAGrB,IAAMU,EAAiB,SAACjD,EAAW1J,GAAZ,OACrB0J,EAAUvB,QACR,SAAC2D,GAAD,OAAcA,EAASI,aAAelM,EAAQkM,eAElD,OAAOS,EAAejD,EAAW1J,GAUjC,OAAO0J,EAAU0C,KAAI,SAAC5P,GAAD,OACnBA,EAAK0P,aAAelM,EAAQkM,WAA5B,2BACS1P,GADT,IACe6K,SAAU7K,EAAK6K,SAAW,IACrC7K,KAKV,GAAI4N,EAAOvN,OAAS6J,IAAkB,CAEpC7H,QAAQC,IAAIkB,EAAQ,qDACpB+L,IAAMpK,QAAQ,oBAAoB,CAChCC,MAAM,CACJoK,aAAc,OACdC,gBAAiB,aAGrB,IAAIW,EAAQ,YAAOlD,GACfmD,EAAeD,EAASzE,QAAO,SAAA2D,GAAQ,OAAIA,EAASrB,MAAQzK,EAAQyK,OACxE,OAAO,YAAIoC,GAGb,OAAIzC,EAAOvN,OAAS8J,KAClBoF,IAAMpK,QAAQ,yBAAyB,CACrCC,MAAM,CACJoK,aAAc,OACdC,gBAAiB,aAGdvC,EAAUvB,QAAO,SAAA3L,GACtB,OAAO,MAIP4N,EAAOvN,OAASgK,IACX6C,EAAUvB,QAAO,SAAA3L,GAAS,OAAO,KAGnC2N,GC9MH7B,EAAe,CACjBwE,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,EACpBC,0BAA2B,GAC3BtB,SAAU,I,QCDRR,EAAY,GAgCH+B,EA9BS,WAAgC,IAA/B/C,EAA8B,uDAAtBgB,EAAWf,EAAW,uCAC/C+C,EAAgBhD,EACpBnK,EAAUoK,EAAOtN,QAEnB,GAAIsN,EAAOvN,OAASuQ,IAAiB,CACnC,IAAMC,EAAeF,EAAchF,QACjC,SAAA3L,GAAI,OAAIA,EAAK6P,KAAOrM,EAAQqM,MAC5B,GACF,YAAqBvO,IAAjBuP,EACI,GAAN,mBAAWF,GAAX,CAA0BnN,IAEnBmN,EAIX,GAAI/C,EAAOvN,OAASyQ,IAAsB,CACxC,IAAMX,EAAiB,SAACQ,EAAenN,GAAhB,OACrBmN,EAAchF,QAAO,SAAAkF,GAAY,OAAIA,EAAahB,KAAOrM,EAAQqM,OACnE,OAAOM,EAAeQ,EAAenN,GAGvC,OAAIoK,EAAOvN,OAAS0Q,IACXJ,EAAchF,QAAO,SAAA3L,GAC1B,OAAO,KAIJ2Q,G,SCjCHhC,EAAY,GAwBHqC,EAtBQ,WAAgC,IAA/BrD,EAA8B,uDAAtBgB,EAAWf,EAAW,uCAC9CqD,EAAetD,EACnBnK,EAAUoK,EAAOtN,QAEnB,GAAIsN,EAAOvN,OAASR,IAAgB,CAClC,IAAMqR,EAAcD,EAAatF,QAAO,SAAA3L,GAAI,OAAIA,EAAK6P,KAAOrM,EAAQqM,MAAI,GACxE,YAAoBvO,IAAhB4P,EACI,GAAN,mBAAWD,GAAX,CAAyBzN,IAElByN,EAIX,GAAIrD,EAAOvN,OAASP,IAAqB,CACvC,IAAMqQ,EAAiB,SAACc,EAAczN,GAAf,OACrByN,EAAatF,QAAO,SAAAuF,GAAW,OAAIA,EAAYrB,KAAOrM,EAAQqM,OAChE,OAAOM,EAAec,EAAczN,GAGtC,OAAOyN,G,QCrBHnF,EAAe,CACnBqF,sBAAsB,EACtBC,eAAe,EACfC,iBAAiB,EACjBC,eAAe,EACfC,qBAAsB,GACtBC,qBAAsB,ICNlB1F,EAAe,CACnB2F,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,6BAA8B,ICL1B/F,EAAe,CACnBgG,iCAAiC,EACjCC,0BAA0B,EAC1BC,0BAA0B,EAC1BC,gCAAiC,GACjCC,gCAAiC,ICL7BpG,EAAe,CACnBqG,0CAA0C,EAC1CC,mCAAmC,EACnCC,mCAAmC,EACnCC,yCAA0C,GAC1CC,yCAA0C,ICLtCzG,EAAe,CACnB0G,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBC,2BAA4B,GAC5BC,2BAA4B,ICQfC,EARMpF,0BAAgB,CACnCqF,SLGsB,WAAmC,IAAlCnF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACxD,OAAOA,EAAOvN,MACZ,KAAKwN,KACH,OAAO,2BACFF,GADL,IAEEwD,sBAAsB,EACtBC,eAAe,EACfE,eAAe,EACfD,iBAAiB,IAErB,KAAKxD,KACH,OAAO,2BACFF,GADL,IAEEwD,sBAAsB,EACtBC,eAAe,EACfC,iBAAiB,EACjBC,eAAe,IAEnB,KAAKzD,KACH,OAAO,2BACFF,GADL,IAEEwD,sBAAsB,EACtBC,eAAe,EACfC,iBAAiB,EACjBE,qBAAsB,GACtBC,qBAAsB,GACtBF,eAAe,IAEnB,KAAKzD,KACH,OAAO,2BACFF,GADL,IAEEwD,sBAAsB,EACtBC,eAAe,EACfC,iBAAiB,EACjBC,eAAe,EACfE,qBAAsB5D,EAAOtN,UAEjC,KAAKuN,KACH,OAAO,2BACFF,GADL,IAEE2D,eAAe,EACfF,eAAe,EACfC,iBAAiB,EACjBF,sBAAsB,EACtBI,qBAAsB3D,EAAOtN,UAEjC,QACE,OAAOqN,IKjDXoF,eDC4B,WAAmC,IAAlCpF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC9D,OAAOA,EAAOvN,MACZ,KAAKwN,IACH,OAAO,2BACFF,GADL,IAEE6E,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,IAEzB,KAAK7E,IACH,OAAO,2BACFF,GADL,IAEE6E,4BAA4B,EAC5BC,qBAAqB,EACrBC,qBAAqB,EACrBE,2BAA4BhF,EAAOtN,UAEvC,KAAKuN,IACH,OAAO,2BACFF,GADL,IAEE+E,qBAAqB,EACrBD,qBAAqB,EACrBD,4BAA4B,EAC5BG,2BAA4B/E,EAAOtN,UAEvC,QACE,OAAOqN,IC1BXqF,iBJA8B,WAAmC,IAAlCrF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAChE,OAAOA,EAAOvN,MACZ,KAAKwN,IACH,OAAO,2BACFF,GADL,IAEE8D,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,6BAA8B,KAElC,KAAKhE,IACH,OAAO,2BACFF,GADL,IAEE8D,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,6BAA8BjE,EAAOtN,UAEzC,KAAKuN,IACH,OAAO,2BACFF,GADL,IAEEgE,uBAAuB,EACvBD,uBAAuB,EACvBD,8BAA8B,EAC9BG,6BAA8BhE,EAAOtN,QACrCuR,6BAA8B,KAElC,KAAKhE,IACH,OAAO,2BACFF,GADL,IAEE8D,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,6BAA8B,KAElC,QACE,OAAOlE,IItCXsF,oBHDiC,WAAmC,IAAlCtF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACnE,OAAOA,EAAOvN,MACZ,KAAKwN,IACH,OAAO,2BACFF,GADL,IAEEmE,iCAAiC,EACjCC,0BAA0B,EAC1BC,0BAA0B,IAE9B,KAAKnE,IACH,OAAO,2BACFF,GADL,IAEEmE,iCAAiC,EACjCC,0BAA0B,EAC1BC,0BAA0B,EAC1BE,gCAAiCtE,EAAOtN,UAE5C,KAAKuN,IACH,OAAO,2BACFF,GADL,IAEEqE,0BAA0B,EAC1BD,0BAA0B,EAC1BD,iCAAiC,EACjCG,gCAAiCrE,EAAOtN,UAE5C,QACE,OAAOqN,IGxBXuF,4BFFyC,WAAmC,IAAlCvF,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC3E,OAAOA,EAAOvN,MACZ,KAAKwN,KACH,OAAO,2BACFF,GADL,IAEEwE,0CAA0C,EAC1CC,mCAAmC,EACnCC,mCAAmC,IAEvC,KAAKxE,KACH,OAAO,2BACFF,GADL,IAEEwE,0CAA0C,EAC1CC,mCAAmC,EACnCC,mCAAmC,EACnCE,yCAA0C3E,EAAOtN,UAErD,KAAKuN,KACH,OAAO,2BACFF,GADL,IAEE0E,mCAAmC,EACnCD,mCAAmC,EACnCD,0CAA0C,EAC1CG,yCAA0C1E,EAAOtN,UAErD,QACE,OAAOqN,MGlCP7B,EAAe,CACjBqH,6BAA6B,EAC7BC,sBAAsB,EACtBC,sBAAsB,EACtBC,4BAA6B,GAC7BC,kBAAmB,ICLjBzH,EAAe,CACjB0H,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,qBAAsB,ICLpB9H,EAAe,CACjB+H,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,wBAAyB,GACzBC,cAAe,ICLbnI,EAAe,CACjBwE,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,EACpBC,0BAA2B,GAC3BtB,SAAU,ICLRrD,EAAe,CACjBoI,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBC,wBAAyB,GACzBC,OAAQ,ICLNxI,EAAe,CACjByI,kCAAkC,EAClCC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,iCAAkC,GAClCC,gBAAiB,ICiCNC,GApBKnH,0BAAgB,CAClCoH,cAAeC,qCAA2B,CAAEC,oBAAqB,OACjEC,aAAcnG,EACdoG,YAAa7F,EACb8F,SAAU7F,EACV8F,KAAMC,EACNC,WNhB4B,WAAmC,IAAlC1H,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC5D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIwF,6BAA6B,EAC7BC,sBAAsB,EACtBC,sBAAsB,IAE9B,KAAKxF,IACD,OAAO,2BACAF,GADP,IAEIwF,6BAA6B,EAC7BC,sBAAsB,EACtBC,sBAAsB,EACtBE,kBAAmB3F,EAAOtN,UAElC,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEI0F,sBAAsB,EACtBD,sBAAsB,EACtBD,6BAA6B,EAC7BG,4BAA6B1F,EAAOtN,UAE5C,QACI,OAAOqN,IMTjB2H,cLjB+B,WAAmC,IAAlC3H,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC/D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEI6F,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,qBAAsB,KAE9B,KAAK/F,IACD,OAAO,2BACAF,GADP,IAEI6F,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBE,qBAAsBhG,EAAOtN,UAErC,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEI+F,yBAAyB,EACzBD,yBAAyB,EACzBD,gCAAgC,EAChCG,+BAAgC/F,EAAOtN,UAE/C,QACI,OAAOqN,IKVjB4H,OJlByB,WAAmC,IAAlC5H,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACzD,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIkG,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,IAE1B,KAAKlG,IACD,OAAO,2BACAF,GADP,IAEIkG,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBE,cAAerG,EAAOtN,UAE9B,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEIoG,kBAAkB,EAClBD,kBAAkB,EAClBD,yBAAyB,EACzBG,wBAAyBpG,EAAOtN,UAExC,QACI,OAAOqN,IIPjBwB,SHnB2B,WAAmC,IAAlCxB,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC3D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEI2C,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,IAE5B,KAAK3C,IACD,OAAO,2BACAF,GADP,IAEI2C,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,EACpBrB,SAAUvB,EAAOtN,UAEzB,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEI6C,oBAAoB,EACpBD,oBAAoB,EACpBD,2BAA2B,EAC3BG,0BAA2B7C,EAAOtN,UAE1C,QACI,OAAOqN,IGNjB2G,OFpByB,WAAmC,IAAlC3G,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACzD,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIuG,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,IAE1B,KAAKvG,IACD,OAAO,2BACAF,GADP,IAEIuG,yBAAyB,EACzBC,kBAAkB,EAClBC,kBAAkB,EAClBE,OAAQ1G,EAAOtN,UAEvB,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEIyG,kBAAkB,EAClBD,kBAAkB,EAClBD,yBAAyB,EACzBG,wBAAyBzG,EAAOtN,UAExC,QACI,OAAOqN,IELjB6H,OAAQhI,EACRmH,gBDtBmC,WAAmC,IAAlChH,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACnE,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEI4G,kCAAkC,EAClCC,2BAA2B,EAC3BC,2BAA2B,IAEnC,KAAK5G,IACD,OAAO,2BACAF,GADP,IAEI4G,kCAAkC,EAClCC,2BAA2B,EAC3BC,2BAA2B,EAC3BE,gBAAiB/G,EAAOtN,UAEhC,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEI8G,2BAA2B,EAC3BD,2BAA2B,EAC3BD,kCAAkC,EAClCG,iCAAkC9G,EAAOtN,UAEjD,QACI,OAAOqN,ICHjB8H,cnBvB6B,WAAmC,IAAlC9H,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC7D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEImB,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,gBAAiB,KAEzB,KAAKrB,IACD,OAAO,2BACAF,GADP,IAEImB,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,gBAAiBtB,EAAOtN,UAEhC,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEImB,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgCrB,EAAOtN,QACvC4O,gBAAiB,KAEzB,KAAKrB,IACD,OAAO,2BACAF,GADP,IAEImB,gCAAgC,EAChCC,yBAAyB,EACzBC,yBAAyB,EACzBC,+BAAgC,GAChCC,gBAAiB,KAEzB,QACI,OAAOvB,ImBfjB+H,YrBxB2B,WAAmC,IAAlC/H,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCAC3D,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEIW,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,cAAe,KAEvB,KAAKb,IACD,OAAO,2BACAF,GADP,IAEIW,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,cAAed,EAAOtN,UAE9B,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEIa,uBAAuB,EACvBD,uBAAuB,EACvBD,8BAA8B,EAC9BG,6BAA8Bb,EAAOtN,QACrCoO,cAAe,KAEvB,KAAKb,IACD,OAAO,2BACAF,GADP,IAEIW,8BAA8B,EAC9BC,uBAAuB,EACvBC,uBAAuB,EACvBC,6BAA8B,GAC9BC,cAAe,KAEvB,QACI,OAAOf,IqBdjBgI,iBfzBmC,WAAmC,IAAlChI,EAAiC,uDAAzB7B,EAAc8B,EAAW,uCACnE,OAAOA,EAAOvN,MACV,KAAKwN,IACD,OAAO,2BACAF,GADP,IAEI2C,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,IAE5B,KAAK3C,IACD,OAAO,2BACAF,GADP,IAEI2C,2BAA2B,EAC3BC,oBAAoB,EACpBC,oBAAoB,EACpBrB,SAAUvB,EAAOtN,UAEzB,KAAKuN,IACD,OAAO,2BACAF,GADP,IAEI6C,oBAAoB,EACpBD,oBAAoB,EACpBD,2BAA2B,EAC3BG,0BAA2B7C,EAAOtN,UAE1C,QACI,OAAOqN,IeAjBiI,aAAclF,EACdmF,YAAa7E,I,2BC3BA8E,iBAPK,SAAAC,GAIlB,OAHAC,qBAAU,WACRC,OAAOC,SAAS,EAAG,MAEdH,EAAMI,Y,uCCSTC,GAAcC,gBAAK,kBAAM,8EACzBC,GAAaD,gBAAK,kBAAM,8EACxBE,GAAmBF,gBAAK,kBAAM,8EAC9BG,GAAoBH,gBAAK,kBAAM,8EA+C/BI,IA7CiBJ,gBAAK,kBAAM,8EACTA,gBAAK,kBAAM,8EACZA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EACZA,gBAAK,kBAAM,8EACTA,gBAAK,kBAAM,8EACZA,gBAAK,kBAAM,8EACbA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EACRA,gBAAK,kBAAM,+EACTA,gBAAK,kBAC9B,8EAEsBA,gBAAK,kBAAM,8EACRA,gBAAK,kBAC9B,8EAEoBA,gBAAK,kBAAM,8EACdA,gBAAK,kBAAM,8EACPA,gBAAK,kBAAM,8EACVA,gBAAK,kBAAM,8EACRA,gBAAK,kBAC9B,8EAEwBA,gBAAK,kBAAM,iEACdA,gBAAK,kBAAM,gEACZA,gBAAK,kBAAM,8EACZA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EACZA,gBAAK,kBAAM,8EAGNA,gBAAK,kBAAM,8EACbA,gBAAK,kBAAM,8EACRA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EACRA,gBAAK,kBAChC,8EAEuBA,gBAAK,kBAAM,8EACVA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EAGrBA,gBAAK,kBAAM,+EACrBK,GAAQL,gBAAK,kBAAM,8EAsBnBM,IArBiBN,gBAAK,kBAC1B,8EAEsBA,gBAAK,kBAC3B,8EAEoBA,gBAAK,kBAAM,8EACXA,gBAAK,kBAAM,8EACPA,gBAAK,kBAC7B,8EAImBA,gBAAK,kBAAM,8EACVA,gBAAK,kBAAM,8EACRA,gBAAK,kBAAM,8EACRA,gBAAK,kBAC7B,8EAIUA,gBAAK,kBAAM,+EACnBO,GAAQP,gBAAK,kBAAM,8EACnBQ,GAAUR,gBAAK,kBAAM,8EACrBS,GAAYT,gBAAK,kBAAM,8EAEvBU,GAAQV,gBAAK,kBAAM,8EACnBW,GAAgBX,gBAAK,kBAAM,8EAC3BY,GAAWZ,gBAAK,kBAAM,8EACtBa,GAAiBb,gBAAK,kBAAM,8EAC5Bc,GAAiBd,gBAAK,kBAAM,8EAC5Be,GAAgBf,gBAAK,kBAAM,8EAE3BgB,GAAOhB,gBAAK,kBAAM,8EAGlBiB,IAFWjB,gBAAK,kBAAM,8EACZA,gBAAK,kBAAM,8EACVA,gBAAK,kBAAM,+EAEtBkB,GAAWlB,gBAAK,kBAAM,8EAsHbmB,uBAAU3C,yBApHb,SAACkB,GAaX,OAZAC,qBAAU,WACRD,EAAM7V,SACJuX,wBAAc,CACZC,UAAW,CACTC,GAAIC,EAAQ,KACZC,GAAID,EAAQ,KACZE,GAAIF,EAAQ,YAOlB,kBAAC,iBAAD,CAAeG,UAAU,eACvB,6BACG/S,gBAEH,kBAAC,uBAAD,KACE,kBAAC,KAAD,KACE,kBAAC,GAAD,KACE,kBAAC,WAAD,CACEgT,SACE,yBAAKC,UAAU,2BACb,yBAAKpI,GAAG,cAIZ,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOqI,OAAK,EAACC,KAAM,IAAKC,UAAWhC,KAEnC,kBAAC,KAAD,CAAO8B,OAAK,EAACC,KAAM,UAAWC,UAAW7B,KAEzC,kBAAC,KAAD,CACE4B,KAAM,2BACNC,UAAW7B,KAGb,kBAAC,KAAD,CAAO2B,OAAK,EAACC,KAAM,YAAaC,UAAW5B,KAE3C,kBAAC,KAAD,CACE2B,KAAM,wBACNC,UAAW5B,KAGb,kBAAC,KAAD,CACE2B,KAAM,eACNE,OAAQ,SAACC,GAAD,OACN,kBAAC7B,GAAD,iBAAa6B,EAAb,CAAyBC,IAAKD,EAAWE,MAAMC,OAAO5I,SAI1D,kBAAC,KAAD,CACEsI,KAAM,aACNE,OAAQ,SAACC,GAAD,OACN,kBAAC5B,GAAD,iBAAW4B,EAAX,CAAuBC,IAAKD,EAAWE,MAAMC,OAAO5I,SAIxD,kBAAC,KAAD,CAAOqI,OAAK,EAACC,KAAM,UAAWC,UAAW9B,KAEzC,kBAAC,KAAD,CAAwB6B,KAAM,SAAUC,UAAWrB,KAEnD,kBAAC,KAAD,CAAwBoB,KAAM,qBAAsBC,UAAWpB,KAE/D,kBAAC,KAAD,CACEmB,KAAM,eACNC,UAAWtB,KAQb,kBAAC,KAAD,CACEqB,KAAM,kBACNC,UAAWnB,KAGb,kBAAC,KAAD,CACEkB,KAAM,mBACNC,UAAWlB,KAGb,kBAAC,KAAD,CACEiB,KAAM,mBACNC,UAAWjB,KAGb,kBAAC,KAAD,CAAOe,OAAK,EAACC,KAAM,SAAUC,UAAWzB,KAExC,kBAAC,KAAD,CAAOuB,OAAK,EAACC,KAAM,WAAYC,UAAWvB,KAE1C,kBAAC,KAAD,CAAOqB,OAAK,EAACC,KAAM,iBAAkBC,UAAWxB,KAEhD,kBAAC,KAAD,CAAOuB,KAAM,qBAAsBC,UAAWhB,KAC9C,kBAAC,KAAD,CAAOe,KAAM,QAASC,UAAWf,KACjC,kBAAC,KAAD,CAAOc,KAAM,YAAaC,UAAWd,KAErC,kBAAC,KAAD,CAAOY,OAAK,EAACC,KAAM,aAAcC,UAAWb,KAE5C,kBAAC,KAAD,CAAOW,OAAK,EAACE,UAAWb,eCtMlCmB,I,OAAcC,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAASL,MACvB,4DAsCN,SAASM,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT5W,MAAK,SAAAiX,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3L,QACfsL,UAAUC,cAAcO,YAI1BpX,QAAQC,IACN,iHAKE0W,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB/W,QAAQC,IAAI,sCAGR0W,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B1W,OAAM,SAAAC,GACLN,QAAQM,MAAM,4CAA6CA,M,cC7E3DiX,GAAQC,sBACZjF,GACAkF,iBACAC,+BAAoBC,0BAAgBC,IAAOC,oBAI7CN,GAAM1Z,SrBlBuB,SAAAiP,GAC3B,OAAO,SAAAjP,GACLA,EARyB,SAAAiP,GAAQ,MAAK,CACxC9O,KAHoC,yBAIpCC,QAAS6O,GAMEgL,CAAqBhL,KqBgBnBiL,CAAcjL,KAE7BkL,IAAShC,OACP,kBAAC,WAAD,CAAUuB,MAAOA,IACf,kBAAC,mBAAD,KACE,kBAAC,GAAD,QAGJU,SAASC,eAAe,SDZnB,SAAkBvB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIuB,IAAIC,GAAwBxE,OAAO2C,SAAS8B,MACpDC,SAAW1E,OAAO2C,SAAS+B,OAIvC,OAGF1E,OAAO2E,iBAAiB,QAAQ,WAC9B,IAAM7B,EAAK,UAAM0B,GAAN,sBAEP/B,KAgEV,SAAiCK,EAAOC,GAEtC6B,MAAM9B,GACH5W,MAAK,SAAAC,GAEJ,IAAM0Y,EAAc1Y,EAASH,QAAQ0C,IAAI,gBAEnB,MAApBvC,EAAS2Y,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM9Y,MAAK,SAAAiX,GACjCA,EAAa8B,aAAa/Y,MAAK,WAC7B8T,OAAO2C,SAASuC,eAKpBrC,GAAgBC,EAAOC,MAG1BtW,OAAM,WACLL,QAAQC,IACN,oEArFA8Y,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM9Y,MAAK,WACjCE,QAAQC,IACN,iHAMJwW,GAAgBC,EAAOC,OCV/BE,I,mMCoCamC,EAAuBvF,YAAW0B,kBAAQ,KAARA,EAnEvB,SAAC,GAAmD,IAAtC8D,EAAqC,EAAhDlD,UAAqCmD,GAAW,EAA1BC,WAA0B,2CACjEC,EAAkBC,IAAQ/W,IAAIgB,KAEpC,OADAtD,QAAQC,IAAIiZ,EAAK,4CAEb,kBAAC,IAAD,iBACQA,EADR,CAEIlD,OAAQ,SAACtC,GAAD,OACH0F,GAAuC,SAApBA,EAEhB,oCACI,kBAACH,EAAcvF,IAEjB,kBAAC,IAAD,CAAU4F,GAAI,CAAEC,SAAU,SAAUjO,MAAO,CAAEkO,KAAM9F,EAAM6C,qBA0DlEkD,EAAyBhG,YAAW0B,kBAAQ,KAARA,EApDvB,SAAC,GAAuC,IAA1B8D,EAAyB,EAApClD,UAAyBmD,EAAW,6BACvDE,EAAkBC,IAAQ/W,IAAIgB,KAEpC,GADAtD,QAAQC,IAAIiZ,EAAK,4CACc,WAA3BA,EAAK3C,SAASgD,UAAoD,qBAA3BL,EAAK3C,SAASgD,UAA8D,oBAA3BL,EAAK3C,SAASgD,SACtG,OACI,kBAAC,IAAD,iBACQL,EADR,CAEIlD,OAAQ,SAACtC,GAAD,OACH0F,GAAuC,SAApBA,EACd,kBAAC,IAAD,CAAUE,GAAI,CAAEC,SAAU,IAAKjO,MAAO,CAAEkO,KAAM9F,EAAM6C,aACpD,kBAAC0C,EAAcvF,OAKhC,GAA+B,qBAA3BwF,EAAK3C,SAASgD,SAAiC,CACpD,IAAMG,EAAYC,IAAYC,MAAMV,EAAK3C,SAASsD,QAElD,OADA7Z,QAAQC,IAAIyZ,EAAY,+FAEpB,kBAAC,IAAD,iBACQR,EADR,CAEIlD,OAAQ,SAACtC,GAAD,OACF0F,GAAuC,SAApBA,GAAgCra,YAAc2a,GAC7D,kBAAC,IAAD,CAAUJ,GAAI,CAAEC,SAAU,IAAKjO,MAAO,CAAEkO,KAAM9F,EAAM6C,aACpD,kBAAC0C,EAAcvF,OAMjC,OACI,kBAAC,IAAD,iBACQwF,EADR,CAEIlD,OAAQ,SAACtC,GAAD,OACJ,kBAACuF,EAAcvF,Y,gCC7DnC,4MAAO,IAAMnF,EAAkB,kBAClBE,EAAuB,uBACvBC,EAA2B,2BAG3BoL,EAAgB,SAACnc,EAAMC,GAClC,OAAO,SAAAC,GACLmC,QAAQC,IAAI,2CAA2CrC,GACnDA,GACFA,EAAS,oBAAqB,CAC5BE,WAAY,UACZC,aAAa,IAGjBF,EAAS,CAAEG,KAAMuQ,EAAiBtQ,QAASN,MAKlCoc,EAAqB,SAACpc,EAAMC,GACvC,OAAO,SAAAC,GACDD,GACFA,EAAS,wBAAyB,CAChCE,WAAY,QACZC,aAAa,IAGjBF,EAAS,CAAEG,KAAMyQ,EAAsBxQ,QAASN,MAKvCqc,EAAwB,SAAApc,GACnC,OAAO,SAAAC,GACDD,GACFA,EAAS,4BAA6B,CACpCE,WAAY,QACZC,aAAa,IAGjBF,EAAS,CAAEG,KAAM0Q,Q","file":"static/js/main.85e22488.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nexport let history = createBrowserHistory();\r\n","export const ADD_TO_COMPARE = \"ADD_TO_COMPARE\";\r\nexport const DELETE_FROM_COMPARE = \"DELETE_FROM_COMPARE\";\r\n\r\n// add to compare\r\nexport const addToCompare = (item, addToast) => {\r\n  return dispatch => {\r\n    if (addToast) {\r\n      addToast(\"Added To Compare\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true\r\n      });\r\n    }\r\n    dispatch({ type: ADD_TO_COMPARE, payload: item });\r\n  };\r\n};\r\n\r\n// delete from compare\r\nexport const deleteFromCompare = (item, addToast) => {\r\n  return dispatch => {\r\n    if (addToast) {\r\n      addToast(\"Removed From Compare\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true\r\n      });\r\n    }\r\n    dispatch({ type: DELETE_FROM_COMPARE, payload: item });\r\n  };\r\n};\r\n","import axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport {history} from \"./history.js\"\r\n// import // snackbarUtils from \"../feedback/notiStackConfig.tsx\";\r\nimport {apiRootUrl, ssClientAuthFlagCookieKey, setUserDataCookieKey, ssClientAuthCookieKey} from \"./constants.js\";\r\n\r\nexport const validateEmail = email => {\r\n  const emailRegex = /^(([^<>()\\]\\\\.,;:\\s@“]+(\\.[^<>()\\]\\\\.,;:\\s@“]+)*)|(“.+“))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return emailRegex.test(String(email).toLowerCase());\r\n};\r\n\r\n\r\nexport const validatePhone = phone => {\r\n  const phoneNumber = phone.replace( /\\s+/g, \"\" );\r\n  if (phoneNumber.length > 9)\r\n  {\r\n    const phoneRegex =  /^(\\+?1-?)?(\\([2-9]([02-9]\\d|1[02-9])\\)|[2-9]([02-9]\\d|1[02-9]))-?[2-9]\\d{2}-?\\d{4}$/ ;\r\n    return phoneRegex.test(phoneNumber);\r\n  }\r\n  else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const validatePassword = password => {\r\n  // const passwordRegex = /^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8,}$/\r\n  const passwordRegex = /^(?=.*[!@#$&*])(?=.*[0-9])(?=.*[a-z]).{7,15}$/\r\n  return passwordRegex.test(String(password))\r\n};\r\n\r\n\r\nexport const convertDate = (str) => {\r\n  let date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n  return [day,mnth,date.getFullYear() ].join(\"/\");\r\n}\r\n\r\nexport const convertDate2 = (str) => {\r\n  let date = new Date(str),\r\n      mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n      day = (\"0\" + date.getDate()).slice(-2);\r\n  return [date.getFullYear(),mnth,day ].join(\"-\");\r\n}\r\n\r\n\r\nexport const isObjectEmpty = (requestedObject) => {\r\n  if(requestedObject == undefined || !requestedObject || requestedObject == null){\r\n    return true\r\n  }\r\n  else if(Object.keys(requestedObject).length === 0){\r\n    return true\r\n  }\r\n  else {\r\n    return false\r\n  }\r\n  // return ;\r\n}\r\n\r\nexport const isNotEmptyObject = (requestedObject) => {\r\n  if(requestedObject == undefined || requestedObject == '' || requestedObject == null){\r\n    return false\r\n  }\r\n  else if(Object.keys(requestedObject).length === 0){\r\n    return false\r\n  }\r\n  else if(Object.keys(requestedObject).length !== 0){\r\n    return true\r\n  }\r\n  else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const isArrayEmpty = (requestedArray) => {\r\n  return requestedArray && requestedArray.length === 0 || requestedArray === null\r\n}\r\n\r\nexport const isNotEmptyArray = (requestedArray) => {\r\n  if (requestedArray && requestedArray.length !== 0 || requestedArray !== null){\r\n    return true\r\n  }\r\n  else {\r\n    return false\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const minMax = (min,max,value) => {\r\n  return !(value.length < min || value.length > max);\r\n};\r\n\r\n\r\nexport const minMaxNumbers = (min,max,value) => {\r\n  if(parseInt(value) <= min || parseInt(value) > max){\r\n    return false\r\n  }\r\n  else {\r\n    return true\r\n  }\r\n};\r\n\r\n\r\nexport const maxNumber = (max,value) => {\r\n  return parseInt(value) <= max;\r\n};\r\n\r\n\r\nexport const justStrings = (value) => {\r\n  const justStringRegex = /^[a-zA-Z_ ]+$/;\r\n  return justStringRegex.test(String(value));\r\n};\r\n\r\nexport const filterObject = (requestedObject) => {\r\n  Object.entries(requestedObject).forEach(([key, value]) => {\r\n    if(requestedObject[key] === \"\" || requestedObject[key] == null || requestedObject[key] === undefined || requestedObject[key].length <= 0){\r\n      delete requestedObject[key]\r\n    }\r\n  });\r\n  return requestedObject\r\n};\r\n\r\nexport const rename = ( ( {_id: value, categoryName: label, ...rest} ) => ( {value, label, ...rest} ) )\r\n\r\nexport const renameObjectKey = (requestedObject, nameKey) => {\r\n  console.log(\"================================================================================================\")\r\n  console.log(requestedObject, \"requestedObject for rename requestedObject for rename requestedObject for rename requestedObject for rename \")\r\n  console.log(\"================================================================================================\")\r\n  const rename = (({_id: value, [nameKey]: label, ...rest}) => ({value, label, ...rest}))\r\n  rename(requestedObject)\r\n  return rename(requestedObject)\r\n}\r\n\r\n\r\nexport const renameArrayOfBrandImages = (requestedArray) => {\r\n  if(requestedArray.length > 0){\r\n    const rename = (({fileName: name, original: preview, ...rest}) => ({name, preview, ...rest}))\r\n    return requestedArray.map((requestedObject, index) => {\r\n      return rename(requestedObject)\r\n    })\r\n  }\r\n  else{\r\n    return []\r\n  }\r\n}\r\n\r\n\r\nexport const restoreChangesOfArrayOfBrandImages = (requestedArray) => {\r\n  if(requestedArray.length > 0){\r\n    const rename = (({name: fileName, preview : original , ...rest}) => ({fileName, original, ...rest}))\r\n    return requestedArray.map((requestedObject, index) => {\r\n      return rename(requestedObject)\r\n    })\r\n  }\r\n  else{\r\n    return []\r\n  }\r\n}\r\n\r\n\r\n// export const renameParentCategory = async (requestedObject) => {\r\n//   await return Object.entries(requestedObject).forEach(([key, value]) => {\r\n//     const tempObject = {}\r\n//     tempObject[\"value\"] = requestedObject[\"_id\"]\r\n//     tempObject[\"label\"] = requestedObject[\"categoryName\"]\r\n//     console.log(tempObject,\"tempObject tempObject tempObject tempObject tempObject tempObject tempObject tempObject \")\r\n//     return tempObject\r\n//   });\r\n// }\r\n\r\n\r\nexport const matchOption = (parentCategoryOptions, parentCategory) => {\r\n  let hasFound = false;\r\n  for(let i = 0; i < parentCategoryOptions.length; i++) {\r\n    if (parentCategoryOptions[i].value == parentCategory.value) {\r\n      hasFound = true;\r\n      break;\r\n    }\r\n  }\r\n  return hasFound\r\n  // let hasOption = false\r\n  // parentCategoryOptions.map((parentCategoryOption, index) => {\r\n  //   if(parentCategoryOption.value == parentCategory.value){\r\n  //     hasOption = true\r\n  //   }\r\n  // })\r\n  // return hasOption\r\n}\r\n\r\n\r\n\r\nexport const emailAvailability = async (email) => {\r\n  const emailAttemptResponse = await axios.post(\r\n      `${apiRootUrl}/v1/auth/exist`,{\r\n        email : email\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json'\r\n        },\r\n      }\r\n  ).then(function (response) {\r\n    console.log(\"response response\",response)\r\n    if(response){\r\n      if (response.data.confirmation.message === \"you are able to login\")\r\n      {\r\n        return true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }else {\r\n      return false\r\n    }\r\n  }).catch(function (error) {\r\n    return false;\r\n  });\r\n  return emailAttemptResponse\r\n}\r\n\r\n\r\nexport const emailAvailabilityForNewUser = async (email) => {\r\n  const registerEmailAttemptResponse = await axios.post(\r\n      `${apiRootUrl}/v1/auth/verify-email`,{\r\n        email : email\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Accept: 'application/json'\r\n        },\r\n      }\r\n  ).then(function (response) {\r\n    console.log(\"response response\",response)\r\n    if(response){\r\n      if (response.data.confirmation.message === \"you are able to register\")\r\n      {\r\n        return true\r\n      }\r\n      else {\r\n        return false\r\n      }\r\n    }else {\r\n      return false\r\n    }\r\n  }).catch(function (error) {\r\n    return false;\r\n  });\r\n  return registerEmailAttemptResponse\r\n}\r\n\r\n\r\nexport const checkFieldAvailability = async (apiEndPoint,fieldValueKey,fieldValue,formType,fieldIdKey='',fieldId='') => {\r\n  if(formType === 'create'){\r\n    const fieldAttemptResponse = await axios.post(\r\n        `${apiRootUrl}${apiEndPoint}`,{\r\n          [fieldValueKey] : fieldValue\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${Cookies.get(ssClientAuthCookieKey)}`\r\n          },\r\n          withCredentials: true,\r\n        }).then(function (response) {\r\n      console.log(\"response response\",response)\r\n      if(response){\r\n        if(response.data){\r\n          if(response.data.confirmation){\r\n            return response.data.confirmation.statusCode === 200;\r\n          }\r\n        }\r\n      }else {\r\n        return false\r\n      }\r\n    }).catch(function (error) {\r\n      if(error.response){\r\n        if(error.response.data){\r\n          if(error.response.data.code === 401){\r\n            // snackbarUtils.error(\"Session expired. Sign In again.\")\r\n            Cookies.remove(ssClientAuthFlagCookieKey)\r\n            Cookies.remove(setUserDataCookieKey)\r\n            history.push('/')\r\n          }\r\n          if(error.response.data.code === 409){\r\n            return false\r\n            // // snackbarUtils.error(\"record already exists \")\r\n          }\r\n        }\r\n      }\r\n      // return false;\r\n    });\r\n    return fieldAttemptResponse\r\n  }else {\r\n    const fieldAttemptResponseWithId = await axios.post(\r\n        `${apiRootUrl}${apiEndPoint}`,{\r\n          [fieldIdKey]: fieldId,\r\n          [fieldValueKey] : fieldValue\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${Cookies.get(ssClientAuthCookieKey)}`\r\n          },\r\n          withCredentials: true,\r\n        }).then(function (response) {\r\n      console.log(\"response response\",response)\r\n      if(response){\r\n        if(response.data){\r\n          if(response.data.confirmation){\r\n            return response.data.confirmation.statusCode === 200;\r\n          }\r\n        }\r\n      }else {\r\n        return false\r\n      }\r\n    }).catch(function (error) {\r\n      if(error.response){\r\n        if(error.response.data){\r\n          if(error.response.data.code === 401){\r\n            // snackbarUtils.error(\"Session expired. Sign In again.\")\r\n            Cookies.remove(ssClientAuthFlagCookieKey)\r\n            Cookies.remove(setUserDataCookieKey)\r\n            history.push('/')\r\n          }\r\n          if(error.response.data.code === 409){\r\n            return false\r\n            // // snackbarUtils.error(\"record already exists \")\r\n          }\r\n        }\r\n      }\r\n      // return false;\r\n    });\r\n    return fieldAttemptResponseWithId\r\n  }\r\n}\r\n\r\nexport const shuffleArray = (array) => {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n\r\n    // Generate random number\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n  return array;\r\n}\r\n\r\n\r\n\r\n// export const emailAvailability = async (email) => {\r\n//\r\n//     const respo = await axios.post(\r\n//         `${apiRootUrl}/v1/auth/exist`,{\r\n//             email : email\r\n//         },\r\n//         {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 Accept: 'application/json'\r\n//             },\r\n//         }\r\n//     ).then(function (response) {\r\n//         console.log(\"response response\",response)\r\n//         if(response){\r\n//             // console.log(response.data.confirmation.message == \"This email isn't associated with an account. Please try a different email\")\r\n//             if(response.data.confirmation.message == \"you are able to login\")\r\n//             {\r\n//                 return true\r\n//             }\r\n//             else {\r\n//                 return false\r\n//             }\r\n//         }else {\r\n//             return false\r\n//         }\r\n//     }).catch(function (error) {\r\n//         return false;\r\n//     });\r\n//     return respo;\r\n// }\r\n\r\n\r\n// export const emailAvailability = async (email) => {\r\n//\r\n//\r\n//     await setTimeout(() => {\r\n//         console.log(email)\r\n//         console.log(\"returned falsereturned falsereturned falsereturned false\")\r\n//         return false\r\n//     }, 3000)\r\n//\r\n//   // await axios.post(\r\n//   //   `${apiRootUrl}/v1/auth/exist`,{\r\n//   //     email : trim(email)\r\n//   //   },\r\n//   //   {\r\n//   //     headers: {\r\n//   //       'Content-Type': 'application/json',\r\n//   //       Accept: 'application/json'\r\n//   //     },\r\n//   //   }\r\n//   // ).then(function (response) {\r\n//   //   console.log(\"response response\",response)\r\n//   //   if(response){\r\n//   //       console.log(response.data.confirmation.message == \"This email isn't associated with an account. Please try a different email\")\r\n//   //       if(response.data.confirmation.message == \"This email isn't associated with an account. Please try a different email\")\r\n//   //       {\r\n//   //           return false;\r\n//   //           console.log(\"inside first false\")\r\n//   //       }\r\n//   //       else {\r\n//   //           console.log(\"inside first true false\")\r\n//   //           return false\r\n//   //       }\r\n//   //   }else {\r\n//   //       console.log(\"inside second false\")\r\n//   //       return false\r\n//   //   }\r\n//   // }).catch(function (error) {\r\n//   //   console.log(\"inside third false\")\r\n//   //   return false;\r\n//   // });\r\n// };\r\n\r\n\r\n\r\n\r\nexport const getPrice = (product) => {\r\n  let price = 0;\r\n  // console.log(\"offer condition =>\",product._id, new Date(product.offerStartDate).getTime() <= new Date().getTime() )\r\n  if (( (product && product.crazyDealPrice) && new Date(product && product.crazyDealStartDate).getTime() <= new Date().getTime()) && new Date(product && product.crazyDealExpiryDate).getTime() >= new Date().getTime())\r\n  {\r\n    price = product.crazyDealPrice;\r\n  }\r\n  else if ( (product && product.offeredPrice) && ( new Date(product && product.offerStartDate).getTime() <= new Date().getTime() ) && ( new Date(product && product.offerExpiryDate).getTime() >= new Date().getTime() ) )\r\n  {\r\n    price = product.offeredPrice;\r\n  }\r\n  else{\r\n    price = product.price;\r\n  }\r\n  return parseFloat(price);\r\n};\r\n\r\n\r\nexport const getPercentageCount = (product) => {\r\n  if(product) {\r\n    let offerPrice = (product && product.offeredPrice) || (product && product.crazyDealPrice)\r\n    let originalPrice = product && product.price\r\n    let diffrence = parseFloat(originalPrice) - parseFloat(offerPrice)\r\n    let percentageCount = (diffrence / parseFloat(originalPrice) ) * 100\r\n    return Math.round(percentageCount)\r\n  }\r\n}\r\n\r\n\r\nexport const calcTotalPrice = (data = []) => {\r\n  let total = 0;\r\n  data.forEach((cartItem) => {\r\n    total += (getPrice(cartItem)) * cartItem.quantity;\r\n  });\r\n  return Number(total).toFixed(2);\r\n};\r\n\r\n","import axios from \"axios\";\r\nexport const SET_CURRENCY = \"SET_CURRENCY\";\r\n\r\nexport const setCurrency = currencyName => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`https://api.exchangeratesapi.io/latest?base=USD`)\r\n      .then(response => {\r\n        const rates = response.data.rates;\r\n        let currencyRate = 0;\r\n        for (const rate in rates) {\r\n          if (rate === currencyName) {\r\n            currencyRate = rates[rate];\r\n          }\r\n        }\r\n        dispatch({\r\n          type: SET_CURRENCY,\r\n          payload: { currencyName, currencyRate }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error: \", err);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport {Toaster} from \"react-hot-toast\";\r\n\r\n\r\nexport const renderToast = () => {\r\n return(\r\n     <Toaster\r\n         position=\"bottom-center\"\r\n         toastOptions={{\r\n             success: {\r\n                 style: {\r\n                     background: \"#212121\",\r\n                     maxWidth: \"fit-content\",\r\n                     color: \"#fff\",\r\n                     padding: \".8rem 1rem\",\r\n                     fontSize: \"15px\"\r\n                 },\r\n             },\r\n             error: {\r\n                 style: {\r\n                     background: \"#212121\",\r\n                     maxWidth: \"fit-content\",\r\n                     color: \"#fff\",\r\n                     padding: \".8rem 1rem\",\r\n                     fontSize: \"15px\"\r\n                 },\r\n             },\r\n         }}\r\n     />\r\n )\r\n}","// export const apiRootUrl = \"https://0571264e1618.ngrok.io\"\r\n// export const apiRootUrl = \"http://localhost:5000\"\r\nexport const apiRootUrl = \"https://api.sunraystationers.com\"\r\nexport const ssClientCryptoSecretKey = \"yOqHPAqgdG\"\r\nexport const ssClientAuthFlagCookieKey = \"a9K5J\"\r\nexport const ssClientAuthCookieKey = \"_jUkq5291cN411\"\r\nexport const setUserDataCookieKey = \"S_U\"","// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n//                                                                  ** AUTHENTICATION MODULE  **\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n\r\n// sign in action types\r\nexport const SIGN_IN_REQUEST = \"SIGN_IN_REQUEST\"\r\nexport const SIGN_OUT_REQUEST = \"SIGN_OUT_REQUEST\"\r\nexport const SIGN_IN_COOKIE_SET = \"SIGN_IN_COOKIE_SET\"\r\nexport const SIGN_IN_REQUEST_SUCCESS = \"SIGN_IN_REQUEST_SUCCESS\"\r\nexport const SIGN_IN_REQUEST_FAILED = \"SIGN_IN_REQUEST_FAILED\"\r\n\r\n// register action types\r\nexport const REGISTER_USER_REQUEST = \"REGISTER_USER_REQUEST\"\r\nexport const REGISTER_USER_REQUEST_SUCCESS = \"REGISTER_USER_REQUEST_SUCCESS\"\r\nexport const REGISTER_USER_REQUEST_FAILED = \"REGISTER_USER_REQUEST_FAILED\"\r\n\r\n\r\n// forgot password action types\r\nexport const FORGOT_PASSWORD_REQUEST = \"FORGOT_PASSWORD_REQUEST\"\r\nexport const FORGOT_PASSWORD_REQUEST_SUCCESS = \"FORGOT_PASSWORD_REQUEST_SUCCESS\"\r\nexport const FORGOT_PASSWORD_REQUEST_FAILED = \"FORGOT_PASSWORD_REQUEST_FAILED\"\r\nexport const FORGOT_PASSWORD_REQUEST_CLEAR = \"FORGOT_PASSWORD_REQUEST_CLEAR\"\r\n\r\n// validate create new password link action types\r\nexport const VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST = \"VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST\"\r\nexport const VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_SUCCESS = \"VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_SUCCESS\"\r\nexport const VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_FAILED = \"VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_FAILED\"\r\n\r\n// create new password action types\r\nexport const CREATE_NEW_PASSWORD_REQUEST = \"CREATE_NEW_PASSWORD_REQUEST\"\r\nexport const CREATE_NEW_PASSWORD_REQUEST_SUCCESS = \"CREATE_NEW_PASSWORD_REQUEST_SUCCESS\"\r\nexport const CREATE_NEW_PASSWORD_REQUEST_FAILED = \"CREATE_NEW_PASSWORD_REQUEST_FAILED\"\r\n\r\n\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n//                                                                  ** PRODUCT MODULE  **\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n\r\n// ==================================================================\r\n// PRODUCT CATEGORY\r\n// ==================================================================\r\n// get category action types\r\nexport const GET_CATEGORIES_REQUEST = \"GET_CATEGORIES_REQUEST\"\r\nexport const GET_CATEGORIES_REQUEST_SUCCESS = \"GET_CATEGORIES_REQUEST_SUCCESS\"\r\nexport const GET_CATEGORIES_REQUEST_FAILED = \"GET_CATEGORIES_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// PRODUCT SUB CATEGORY\r\n// ==================================================================\r\n\r\n// get sub category action types\r\nexport const GET_SUB_CATEGORIES_REQUEST = \"GET_SUB_CATEGORIES_REQUEST\"\r\nexport const GET_SUB_CATEGORIES_REQUEST_SUCCESS = \"GET_SUB_CATEGORIES_REQUEST_SUCCESS\"\r\nexport const GET_SUB_CATEGORIES_REQUEST_FAILED = \"GET_SUB_CATEGORIES_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// PRODUCT CHILD CATEGORY\r\n// ==================================================================\r\n\r\n// get child category action types\r\nexport const GET_CHILD_CATEGORIES_REQUEST = \"GET_CHILD_CATEGORIES_REQUEST\"\r\nexport const GET_CHILD_CATEGORIES_REQUEST_SUCCESS = \"GET_CHILD_CATEGORIES_REQUEST_SUCCESS\"\r\nexport const GET_CHILD_CATEGORIES_REQUEST_FAILED = \"GET_CHILD_CATEGORIES_REQUEST_FAILED\"\r\n\r\n\r\n// ==================================================================\r\n// PRODUCT BRANDS\r\n// ==================================================================\r\n\r\n// get brand action types\r\nexport const GET_BRANDS_REQUEST = \"GET_BRANDS_REQUEST\"\r\nexport const GET_BRANDS_REQUEST_SUCCESS = \"GET_BRANDS_REQUEST_SUCCESS\"\r\nexport const GET_BRANDS_REQUEST_FAILED = \"GET_BRANDS_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// PRODUCT ( ALL PRODUCTS )\r\n// ==================================================================\r\n\r\n// get product action types\r\n\r\nexport const GET_PRODUCT_REQUEST = \"GET_PRODUCT_REQUEST\"\r\nexport const GET_PRODUCT_REQUEST_SUCCESS = \"GET_PRODUCT_REQUEST_SUCCESS\"\r\nexport const GET_PRODUCT_REQUEST_FAILED = \"GET_PRODUCT_REQUEST_FAILED\"\r\nexport const CLEAN_STATE_GET_PRODUCT_REQUEST = \"CLEAN_STATE_GET_PRODUCT_REQUEST\"\r\n\r\n\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\"\r\nexport const GET_PRODUCTS_REQUEST_SUCCESS = \"GET_PRODUCTS_REQUEST_SUCCESS\"\r\nexport const GET_PRODUCTS_REQUEST_FAILED = \"GET_PRODUCTS_REQUEST_FAILED\"\r\n\r\n\r\nexport const GET_FEATURED_PRODUCTS_REQUEST = \"GET_FEATURED_PRODUCTS_REQUEST\"\r\nexport const GET_FEATURED_PRODUCTS_REQUEST_SUCCESS = \"GET_FEATURED_PRODUCTS_REQUEST_SUCCESS\"\r\nexport const GET_FEATURED_PRODUCTS_REQUEST_FAILED = \"GET_FEATURED_PRODUCTS_REQUEST_FAILED\"\r\n\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n//                                                                  ** COMBOS MODULE  **\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n\r\n\r\n// ==================================================================\r\n// COMBO CATEGORY\r\n// ==================================================================\r\n\r\n// get combo category action types\r\nexport const GET_COMBO_CATEGORIES_REQUEST = \"GET_COMBO_CATEGORIES_REQUEST\"\r\nexport const GET_COMBO_CATEGORIES_REQUEST_SUCCESS = \"GET_COMBO_CATEGORIES_REQUEST_SUCCESS\"\r\nexport const GET_COMBO_CATEGORIES_REQUEST_FAILED = \"GET_COMBO_CATEGORIES_REQUEST_FAILED\"\r\n\r\n\r\n// ==================================================================\r\n// COMBO ( ALL COMBOS )\r\n// ==================================================================\r\n\r\n// get combo action types\r\nexport const GET_COMBOS_REQUEST = \"GET_COMBOS_REQUEST\"\r\nexport const GET_COMBOS_REQUEST_SUCCESS = \"GET_COMBOS_REQUEST_SUCCESS\"\r\nexport const GET_COMBOS_REQUEST_FAILED = \"GET_COMBOS_REQUEST_FAILED\"\r\n\r\nexport const GET_COMBO_REQUEST = \"GET_COMBO_REQUEST\"\r\nexport const GET_COMBO_REQUEST_SUCCESS = \"GET_COMBO_REQUEST_SUCCESS\"\r\nexport const GET_COMBO_REQUEST_FAILED = \"GET_COMBO_REQUEST_FAILED\"\r\nexport const CLEAN_GET_COMBO_REQUEST = \"CLEAN_GET_COMBO_REQUEST\"\r\n\r\n\r\n\r\n\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n//                                                                  ** OFFER MODULE  **\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n// ==================================================================\r\n// OFFER CRAZY DEALS\r\n// ==================================================================\r\n\r\n// get crazy deal action types\r\nexport const GET_CRAZY_DEALS_REQUEST = \"GET_CRAZY_DEALS_REQUEST\"\r\nexport const GET_CRAZY_DEALS_REQUEST_SUCCESS = \"GET_CRAZY_DEALS_REQUEST_SUCCESS\"\r\nexport const GET_CRAZY_DEALS_REQUEST_FAILED = \"GET_CRAZY_DEALS_REQUEST_FAILED\"\r\n\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n//                                                                  ** SALES MODULE  **\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n\r\n\r\n// ==================================================================\r\n// SALES ALL ORDERS\r\n// ==================================================================\r\n\r\n// get sale order action types\r\nexport const GET_ORDERS_REQUEST = \"GET_ORDERS_REQUEST\"\r\nexport const GET_ORDERS_REQUEST_SUCCESS = \"GET_ORDERS_REQUEST_SUCCESS\"\r\nexport const GET_ORDERS_REQUEST_FAILED = \"GET_ORDERS_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// SALES ALL ORDER PAYMENTS\r\n// ==================================================================\r\n\r\n// get sale order payment action types\r\nexport const GET_ORDER_PAYMENTS_REQUEST = \"GET_ORDER_PAYMENTS_REQUEST\"\r\nexport const GET_ORDER_PAYMENTS_REQUEST_SUCCESS = \"GET_ORDER_PAYMENTS_REQUEST_SUCCESS\"\r\nexport const GET_ORDER_PAYMENTS_REQUEST_FAILED = \"GET_ORDER_PAYMENTS_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// SALES ALL ORDER REVIEWS\r\n// ==================================================================\r\n\r\n// get sale order reviews action types\r\nexport const GET_ORDER_REVIEWS_REQUEST = \"GET_ORDER_REVIEWS_REQUEST\"\r\nexport const GET_ORDER_REVIEWS_REQUEST_SUCCESS = \"GET_ORDER_REVIEWS_REQUEST_SUCCESS\"\r\nexport const GET_ORDER_REVIEWS_REQUEST_FAILED = \"GET_ORDER_REVIEWS_REQUEST_FAILED\"\r\n\r\n\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n//                                                                  ** CUSTOMERS MODULE  **\r\n// === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === === ===\r\n\r\n\r\n// ==================================================================\r\n// ALL CUSTOMERS\r\n// ==================================================================\r\n\r\n// get all customers action types\r\nexport const GET_CUSTOMERS_REQUEST = \"GET_CUSTOMERS_REQUEST\"\r\nexport const GET_CUSTOMERS_REQUEST_SUCCESS = \"GET_CUSTOMERS_REQUEST_SUCCESS\"\r\nexport const GET_CUSTOMERS_REQUEST_FAILED = \"GET_CUSTOMERS_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// CUSTOMERS INQUIRIES\r\n// ==================================================================\r\n\r\n// get customers inquiries action types\r\nexport const GET_CUSTOMER_INQUIRIES_REQUEST = \"GET_CUSTOMER_INQUIRIES_REQUEST\"\r\nexport const GET_CUSTOMER_INQUIRIES_REQUEST_SUCCESS = \"GET_CUSTOMER_INQUIRIES_REQUEST_SUCCESS\"\r\nexport const GET_CUSTOMER_INQUIRIES_REQUEST_FAILED = \"GET_CUSTOMER_INQUIRIES_REQUEST_FAILED\"\r\n\r\n// ==================================================================\r\n// CREDIT NOTES\r\n// ==================================================================\r\n\r\n// get credit notes action types\r\nexport const GET_CREDIT_NOTES_REQUEST = \"GET_CREDIT_NOTES_REQUEST\"\r\nexport const GET_CREDIT_NOTES_REQUEST_SUCCESS = \"GET_CREDIT_NOTES_REQUEST_SUCCESS\"\r\nexport const GET_CREDIT_NOTES_REQUEST_FAILED = \"GET_CREDIT_NOTES_REQUEST_FAILED\"\r\n\r\n\r\nexport const ADD_TO_SS_CART_REQUEST = \"ADD_TO_SS_CART_REQUEST\"\r\nexport const ADD_TO_SS_CART_REQUEST_SUCCESS = \"ADD_TO_SS_CART_REQUEST_SUCCESS\"\r\nexport const ADD_TO_SS_CART_REQUEST_FAILED = \"ADD_TO_SS_CART_REQUEST_FAILED\"\r\n\r\nexport const GET_SS_CART_REQUEST = \"GET_SS_CART_REQUEST\"\r\nexport const GET_SS_CART_REQUEST_SUCCESS = \"GET_SS_CART_REQUEST_SUCCESS\"\r\nexport const GET_SS_CART_REQUEST_FAILED = \"GET_SS_CART_REQUEST_FAILED\"\r\n\r\nexport const UPDATE_SS_CART_REQUEST = \"UPDATE_SS_CART_REQUEST\"\r\nexport const UPDATE_SS_CART_REQUEST_SUCCESS = \"UPDATE_SS_CART_REQUEST_SUCCESS\"\r\nexport const UPDATE_SS_CART_REQUEST_FAILED = \"UPDATE_SS_CART_REQUEST_FAILED\"\r\n\r\nexport const DELETE_FROM_SS_CART_REQUEST = \"DELETE_FROM_SS_CART_REQUEST\"\r\nexport const DELETE_FROM_SS_CART_REQUEST_SUCCESS = \"DELETE_FROM_SS_CART_REQUEST_SUCCESS\"\r\nexport const DELETE_FROM_SS_CART_REQUEST_FAILED = \"DELETE_FROM_SS_CART_REQUEST_FAILED\"\r\n\r\nexport const SEND_EMPTY_USER_CART_REQUEST = \"SEND_EMPTY_USER_CART_REQUEST\"\r\nexport const SEND_EMPTY_USER_CART_REQUEST_SUCCESS = \"SEND_EMPTY_USER_CART_REQUEST_SUCCESS\"\r\nexport const SEND_EMPTY_USER_CART_REQUEST_FAILED = \"SEND_EMPTY_USER_CART_REQUEST_FAILED\"\r\n\r\nexport const RESET_DELETE_CART_USER_STATE = \"RESET_DELETE_CART_USER_STATE\"\r\nexport const DELETE_ITEM_FROM_STATE_REQUEST = \"DELETE_ITEM_FROM_STATE_REQUEST\"\r\nexport const EMPTY_USER_CART_REQUEST = \"EMPTY_USER_CART_REQUEST\"\r\n","import {toast} from \"react-hot-toast\";\r\n\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const SET_USER_CART_DATA = \"SET_USER_CART_DATA\"\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const DELETE_FROM_CART = \"DELETE_FROM_CART\";\r\nexport const DELETE_ALL_FROM_CART = \"DELETE_ALL_FROM_CART\";\r\nexport const UPDATE_IS_AVAILABLE = \"UPDATE_IS_AVAILABLE\";\r\nexport const EMPTY_CART = \"EMPTY_CART\";\r\nexport const UPDATE_IS_ADDED_TO_USER_CART = \"UPDATE_IS_ADDED_TO_USER_CART\"\r\n\r\n//add to cart\r\nexport const addToCart = (item, isAddedToUserCart, showAlert, addToast, quantityCount, selectedProductColor,selectedProductSize) => {\r\n  // console.log(item);\r\n  console.log(quantityCount,\"quantityCount, quantityCount,quantityCount,quantityCount,quantityCount,quantityCount,quantityCount, \");\r\n  // alert(item.toString(), \"item tem asa,ma s\")\r\n  // alert(isAddedToUserCart.toString() + \" <===isAddedToUserCart, isAddedToUserCart, isAddedToUserCart, isAddedToUserCart,\")\r\n  // alert(\"show alret \",showAlert.toString())\r\n  // alert(addToast,\"addToast, addToast, addToast,\")\r\n\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: ADD_TO_CART,\r\n      payload: {\r\n        ...item,\r\n        quantity: quantityCount,\r\n        isAvailable: true,\r\n        showAlert: showAlert,\r\n        isAddedToUserCart: isAddedToUserCart,\r\n        selectedProductColor: selectedProductColor\r\n            ? selectedProductColor\r\n            : item.selectedProductColor\r\n                ? item.selectedProductColor\r\n                : null,\r\n        selectedProductSize: selectedProductSize\r\n            ? selectedProductSize\r\n            : item.selectedProductSize\r\n                ? item.selectedProductSize\r\n                : null,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n\r\nexport const setUserCartData = (data) => {\r\n  console.log(data,\"action payload action payload action payload from actions \")\r\n  return (dispatch) => {\r\n    dispatch({ type: SET_USER_CART_DATA, payload: data });\r\n  };\r\n};\r\n\r\n\r\n//update is available\r\nexport const updateIsAvailable = (data) => {\r\n  console.log(data,\"action payload action payload action payload from actions \")\r\n  return (dispatch) => {\r\n    dispatch({ type: UPDATE_IS_AVAILABLE, payload: data });\r\n  };\r\n};\r\n\r\n\r\n//update is added to user cart\r\nexport const updateIsAddedToUserCart = (data) => {\r\n  console.log(data,\"action payload action payload action payload from actions \")\r\n  // alert(data.isAddedToUserCart+\" isAddedToUserCart isAddedToUserCart isAddedToUserCart\")\r\n  return (dispatch) => {\r\n    dispatch({ type: UPDATE_IS_ADDED_TO_USER_CART, payload: data });\r\n  };\r\n};\r\n\r\n\r\n\r\n//decrease from cart\r\nexport const decreaseQuantity = (item, addToast) => {\r\n  return (dispatch) => {\r\n  dispatch({ type: DECREASE_QUANTITY, payload: item });\r\n  };\r\n};\r\n//delete from cart\r\nexport const deleteFromCart = (itemForDelete, addToast) => {\r\n  console.log(itemForDelete,\"deltete cart itemForDelete delete cart irem \")\r\n  return (dispatch) => {\r\n    dispatch({ type: DELETE_FROM_CART, payload: itemForDelete });\r\n  };\r\n};\r\n//delete all from cart\r\nexport const deleteAllFromCart = (addToast) => {\r\n  return (dispatch) => {\r\n    if (addToast) {\r\n    }\r\n    dispatch({ type: DELETE_ALL_FROM_CART });\r\n  };\r\n};\r\n\r\n\r\nexport const emptyCart = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: EMPTY_CART });\r\n  };\r\n};\r\n\r\n// get stock of cart item\r\nexport const cartItemStock = (item, color, size) => {\r\n  if (item.stock) {\r\n    return item.stock;\r\n  } else if (item.variation) {\r\n    return item.variation\r\n        .filter((single) => single.color === color)[0]\r\n        .size.filter((single) => single.name === size)[0].stock;\r\n  }\r\n};\r\n","import * as types from '../../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    deleteFromSSCartRequestPending: false,\r\n    deleteFromSSCartSuccess: false,\r\n    deleteFromSSCartFailure: false,\r\n    deleteFromSSCartFailurePayload: {},\r\n    deleteFromSSCartSuccessPayload: {},\r\n}\r\n\r\nexport const ssDeleteFromCart = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.DELETE_FROM_SS_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                deleteFromSSCartRequestPending: true,\r\n                deleteFromSSCartSuccess: false,\r\n                deleteFromSSCartFailure: false,\r\n            }\r\n        case types.DELETE_FROM_SS_CART_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                deleteFromSSCartRequestPending: false,\r\n                deleteFromSSCartSuccess: true,\r\n                deleteFromSSCartFailure: false,\r\n                deleteFromSSCartSuccessPayload: action.payload,\r\n            }\r\n        case types.DELETE_FROM_SS_CART_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                deleteFromSSCartFailure: true,\r\n                deleteFromSSCartSuccess: false,\r\n                deleteFromSSCartRequestPending: false,\r\n                deleteFromSSCartFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    addToSSCartRequestPending: false,\r\n    addToSSCartSuccess: false,\r\n    addToSSCartFailure: false,\r\n    addToSSCartFailurePayload: {},\r\n    addToSSCartSuccessPayload: {},\r\n}\r\n\r\nexport const ssAddToCart = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.ADD_TO_SS_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                addToSSCartRequestPending: true,\r\n                addToSSCartSuccess: false,\r\n                addToSSCartFailure: false,\r\n            }\r\n        case types.ADD_TO_SS_CART_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addToSSCartRequestPending: false,\r\n                addToSSCartSuccess: true,\r\n                addToSSCartFailure: false,\r\n                addToSSCartSuccessPayload: action.payload,\r\n            }\r\n        case types.ADD_TO_SS_CART_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                addToSSCartFailure: true,\r\n                addToSSCartSuccess: false,\r\n                addToSSCartRequestPending: false,\r\n                addToSSCartFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    emptyUserCartRequestPending: false,\r\n    emptyUserCartSuccess: false,\r\n    emptyUserCartFailure: false,\r\n    emptyUserCartFailurePayload: {},\r\n    emptyUserCartSuccessPayload: {},\r\n}\r\n\r\nexport const ssEmptyUserCart = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.SEND_EMPTY_USER_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                emptyUserCartRequestPending: true,\r\n                emptyUserCartSuccess: false,\r\n                emptyUserCartFailure: false,\r\n            }\r\n        case types.SEND_EMPTY_USER_CART_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                emptyUserCartRequestPending: false,\r\n                emptyUserCartSuccess: true,\r\n                emptyUserCartFailure: false,\r\n                emptyUserCartSuccessPayload: action.payload,\r\n            }\r\n        case types.SEND_EMPTY_USER_CART_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                emptyUserCartFailure: true,\r\n                emptyUserCartSuccess: false,\r\n                emptyUserCartRequestPending: false,\r\n                emptyUserCartFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getCartRequestPending: false,\r\n    getCartSuccess: false,\r\n    getCartFailure: false,\r\n    getCartFailurePayload: {},\r\n    cartItems: [],\r\n}\r\n\r\nexport const ssCartItemsData = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_SS_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                getCartRequestPending: true,\r\n                getCartSuccess: false,\r\n                getCartFailure: false,\r\n                cartItems: [],\r\n            }\r\n        case types.GET_SS_CART_REQUEST_SUCCESS:\r\n            if(action.payload){\r\n                return {\r\n                    ...state,\r\n                    getCartRequestPending: false,\r\n                    getCartSuccess: true,\r\n                    getCartFailure: false,\r\n                    cartItems: action.payload,\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    getCartRequestPending: false,\r\n                    getCartSuccess: true,\r\n                    getCartFailure: false,\r\n                    cartItems: []\r\n                }\r\n            }\r\n        case types.GET_SS_CART_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getCartFailure: true,\r\n                getCartSuccess: false,\r\n                getCartRequestPending: false,\r\n                getCartFailurePayload: action.payload,\r\n            }\r\n        case types.EMPTY_USER_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                getCartRequestPending: false,\r\n                getCartSuccess: false,\r\n                getCartFailure: false,\r\n                getCartFailurePayload: {},\r\n                cartItems: [],\r\n            }\r\n        case types.DELETE_ITEM_FROM_STATE_REQUEST:\r\n            let itemId = action.payload\r\n            let tempItems = [...state.cartItems]\r\n            let finalItems = tempItems.filter(item => item._id !== itemId)\r\n            return {\r\n                ...state,\r\n                getCartRequestPending: false,\r\n                getCartSuccess: false,\r\n                getCartFailure: false,\r\n                getCartFailurePayload: {},\r\n                cartItems: [...finalItems],\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    updateSSCartRequestPending: false,\r\n    updateSSCartSuccess: false,\r\n    updateSSCartFailure: false,\r\n    updateSSCartFailurePayload: {},\r\n    updateSSCartSuccessPayload: {},\r\n}\r\n\r\nexport const ssUpdateCart = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.UPDATE_SS_CART_REQUEST:\r\n            return {\r\n                ...state,\r\n                updateSSCartRequestPending: true,\r\n                updateSSCartSuccess: false,\r\n                updateSSCartFailure: false,\r\n            }\r\n        case types.UPDATE_SS_CART_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                updateSSCartRequestPending: false,\r\n                updateSSCartSuccess: true,\r\n                updateSSCartFailure: false,\r\n                updateSSCartSuccessPayload: action.payload,\r\n            }\r\n        case types.UPDATE_SS_CART_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                updateSSCartFailure: true,\r\n                updateSSCartSuccess: false,\r\n                updateSSCartRequestPending: false,\r\n                updateSSCartFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {ssDeleteFromCart} from \"./delete/deleteCartReducer.js\";\r\nimport {ssAddToCart} from \"./add/ssAddToCartReducer.js\";\r\nimport {ssEmptyUserCart} from \"./delete/emptyCartReducer.js\";\r\nimport {ssCartItemsData} from \"./ssGetCartReducer.js\";\r\nimport {ssUpdateCart} from \"./update/ssUpdateCartReducer.js\";\r\n\r\nexport const ssCartReducers = combineReducers({\r\n    ssCartData: ssCartItemsData,\r\n    ssAddToCart: ssAddToCart,\r\n    ssUpdateCart: ssUpdateCart,\r\n    ssDeleteFromCart: ssDeleteFromCart,\r\n    ssEmptyUserCart: ssEmptyUserCart\r\n})\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getSingleComboRequestPending: false,\r\n    getSingleComboSuccess: false,\r\n    getSingleComboFailure: false,\r\n    getSingleComboFailurePayload: {},\r\n    comboDocument: {},\r\n}\r\n\r\nexport const ssSingleCombo = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_COMBO_REQUEST:\r\n            return {\r\n                ...state,\r\n                getSingleComboRequestPending: true,\r\n                getSingleComboSuccess: false,\r\n                getSingleComboFailure: false,\r\n                getSingleComboFailurePayload: {},\r\n                comboDocument: {},\r\n            }\r\n        case types.GET_COMBO_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getSingleComboRequestPending: false,\r\n                getSingleComboSuccess: true,\r\n                getSingleComboFailure: false,\r\n                getSingleComboFailurePayload: {},\r\n                comboDocument: action.payload,\r\n            }\r\n        case types.GET_COMBO_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getSingleComboFailure: true,\r\n                getSingleComboSuccess: false,\r\n                getSingleComboRequestPending: false,\r\n                getSingleComboFailurePayload: action.payload,\r\n                comboDocument: {},\r\n            }\r\n        case types.CLEAN_GET_COMBO_REQUEST:\r\n            return {\r\n                ...state,\r\n                getSingleComboRequestPending: false,\r\n                getSingleComboSuccess: false,\r\n                getSingleComboFailure: false,\r\n                getSingleComboFailurePayload: {},\r\n                comboDocument: {},\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import { SET_CURRENCY } from \"../actions/currencyActions\";\r\n\r\nconst initState = {\r\n  currencySymbol: \"₹\",\r\n  currencyName: \"USD\",\r\n  currencyRate: 1\r\n};\r\n\r\nconst currencyReducer = (state = initState, action) => {\r\n  if (action.type === SET_CURRENCY) {\r\n    const currencyName = action.payload.currencyName;\r\n\r\n    if (currencyName === \"USD\") {\r\n      return {\r\n        ...state,\r\n        currencySymbol: \"$\",\r\n        currencyRate: action.payload.currencyRate,\r\n        currencyName\r\n      };\r\n    }\r\n    if (currencyName === \"EUR\") {\r\n      return {\r\n        ...state,\r\n        currencySymbol: \"€\",\r\n        currencyRate: action.payload.currencyRate,\r\n        currencyName\r\n      };\r\n    }\r\n    if (currencyName === \"GBP\") {\r\n      return {\r\n        ...state,\r\n        currencySymbol: \"£\",\r\n        currencyRate: action.payload.currencyRate,\r\n        currencyName\r\n      };\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default currencyReducer;\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getSingleProductRequestPending: false,\r\n    getSingleProductSuccess: false,\r\n    getSingleProductFailure: false,\r\n    getSingleProductFailurePayload: {},\r\n    productDocument: {},\r\n}\r\n\r\nexport const ssSingleProduct = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                getSingleProductRequestPending: true,\r\n                getSingleProductSuccess: false,\r\n                getSingleProductFailure: false,\r\n                getSingleProductFailurePayload: {},\r\n                productDocument: {},\r\n            }\r\n        case types.GET_PRODUCT_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getSingleProductRequestPending: false,\r\n                getSingleProductSuccess: true,\r\n                getSingleProductFailure: false,\r\n                getSingleProductFailurePayload: {},\r\n                productDocument: action.payload,\r\n            }\r\n        case types.GET_PRODUCT_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getSingleProductRequestPending: false,\r\n                getSingleProductSuccess: false,\r\n                getSingleProductFailure: true,\r\n                getSingleProductFailurePayload: action.payload,\r\n                productDocument: {},\r\n            }\r\n        case types.CLEAN_STATE_GET_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                getSingleProductRequestPending: false,\r\n                getSingleProductSuccess: false,\r\n                getSingleProductFailure: false,\r\n                getSingleProductFailurePayload: {},\r\n                productDocument: {},\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import { FETCH_PRODUCTS_SUCCESS } from \"../actions/productActions\";\r\n\r\nconst initState = {\r\n  products: []\r\n};\r\n\r\nconst productReducer = (state = initState, action) => {\r\n  if (action.type === FETCH_PRODUCTS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      products: action.payload\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default productReducer;\r\n","export const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\r\n\r\nconst fetchProductsSuccess = products => ({\r\n  type: FETCH_PRODUCTS_SUCCESS,\r\n  payload: products\r\n});\r\n\r\n// fetch products\r\nexport const fetchProducts = products => {\r\n  return dispatch => {\r\n    dispatch(fetchProductsSuccess(products));\r\n  };\r\n};\r\n","import {toast} from \"react-hot-toast\";\r\nimport uuid from \"uuid/v4\";\r\nimport {\r\n  ADD_TO_CART,\r\n  DECREASE_QUANTITY,\r\n  DELETE_FROM_CART,\r\n  DELETE_ALL_FROM_CART, UPDATE_IS_AVAILABLE, EMPTY_CART, UPDATE_IS_ADDED_TO_USER_CART, SET_USER_CART_DATA\r\n} from \"../actions/cartActions\";\r\n\r\nconst initState = [];\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  const cartItems = state,\r\n    product = action.payload;\r\n\r\n  if (action.type === ADD_TO_CART) {\r\n    // for non variant products\r\n    if (product.variation === undefined) {\r\n\r\n      const cartItem = cartItems.filter((item) => item._id === product._id)[0];\r\n\r\n      if (cartItem === undefined) {\r\n\r\n        if(product.showAlert){\r\n          toast.success(\"Added to cart\",{style:{marginBottom: \"40px\", backgroundColor: \"#012835\"}})\r\n        }\r\n\r\n        return [\r\n          ...cartItems,\r\n          {\r\n            ...product,\r\n            quantity: product.quantity ? product.quantity : 1,\r\n            cartItemId: uuid(),\r\n          },\r\n        ];\r\n      }\r\n      else {\r\n\r\n\r\n        if(product.showAlert){\r\n\r\n          // toast.success(`You have changed QUANTITY '${cartItem.productName || cartItem.comboName }' `,{\r\n          //   style:{\r\n          //     marginBottom: \"40px\",\r\n          //     backgroundColor: \"#012835\"\r\n          //   }\r\n          // })\r\n\r\n        }\r\n\r\n\r\n        return cartItems.map((item) =>\r\n          item.cartItemId === cartItem.cartItemId\r\n            ? {\r\n                ...item,\r\n                quantity: product.quantity\r\n                  ? item.quantity + product.quantity\r\n                  : item.quantity + 1,\r\n              }\r\n            : item\r\n        );\r\n      }\r\n      // for variant products\r\n    } else {\r\n      const cartItem = cartItems.filter(\r\n        (item) =>\r\n          item._id === product._id &&\r\n          product.selectedProductColor &&\r\n          product.selectedProductColor === item.selectedProductColor &&\r\n          product.selectedProductSize &&\r\n          product.selectedProductSize === item.selectedProductSize &&\r\n          (product.cartItemId ? product.cartItemId === item.cartItemId : true)\r\n      )[0];\r\n\r\n      if (cartItem === undefined) {\r\n        return [\r\n          ...cartItems,\r\n          {\r\n            ...product,\r\n            quantity: product.quantity ? product.quantity : 1,\r\n            cartItemId: uuid(),\r\n          },\r\n        ];\r\n      } else if (\r\n        cartItem !== undefined &&\r\n        (cartItem.selectedProductColor !== product.selectedProductColor ||\r\n          cartItem.selectedProductSize !== product.selectedProductSize)\r\n      ) {\r\n        return [\r\n          ...cartItems,\r\n          {\r\n            ...product,\r\n            quantity: product.quantity ? product.quantity : 1,\r\n            cartItemId: uuid(),\r\n          },\r\n        ];\r\n      } else {\r\n        return cartItems.map((item) =>\r\n          item.cartItemId === cartItem.cartItemId\r\n            ? {\r\n                ...item,\r\n                quantity: product.quantity\r\n                  ? item.quantity + product.quantity\r\n                  : item.quantity + 1,\r\n                selectedProductColor: product.selectedProductColor,\r\n                selectedProductSize: product.selectedProductSize,\r\n              }\r\n            : item\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (action.type === UPDATE_IS_AVAILABLE) {\r\n    const {id, isAvailable} = action.payload\r\n    console.log(\"action payload action payload action payload\",action.payload)\r\n    const updatedItems = cartItems.map(item => {\r\n      if(item._id === id){\r\n        item[\"isAvailable\"] = isAvailable\r\n        return item\r\n      }\r\n      else {\r\n        return item\r\n      }\r\n    })\r\n    return [...updatedItems]\r\n  }\r\n\r\n\r\n  if (action.type === UPDATE_IS_ADDED_TO_USER_CART) {\r\n    console.log(\"action payload action payload action payload\",action.payload)\r\n    const {id, isAddedToUserCart} = action.payload\r\n    const tempCartItems = [...cartItems]\r\n    const updatedItemIndex = cartItems.findIndex(singleItem => singleItem._id === id)\r\n    tempCartItems[updatedItemIndex] = {\r\n      ...tempCartItems[updatedItemIndex],\r\n      isAddedToUserCart: isAddedToUserCart\r\n    }\r\n    return [...tempCartItems]\r\n  }\r\n\r\n  if (action.type === SET_USER_CART_DATA) {\r\n    const tempCartItems = [...action.payload]\r\n    return [...tempCartItems]\r\n  }\r\n\r\n  if (action.type === DECREASE_QUANTITY) {\r\n\r\n\r\n    if (product.quantity === 1) {\r\n      toast.success(\"Removed from cart\",{\r\n        style:{\r\n          marginBottom: \"40px\",\r\n          backgroundColor: \"#012835\"\r\n        }\r\n      })\r\n      const remainingItems = (cartItems, product) =>\r\n        cartItems.filter(\r\n          (cartItem) => cartItem.cartItemId !== product.cartItemId\r\n        );\r\n      return remainingItems(cartItems, product);\r\n    } else {\r\n\r\n      // toast.success(`You have changed QUANTITY '${product.productName || product.comboName }' `,{\r\n      //   style:{\r\n      //     marginBottom: \"40px\",\r\n      //     backgroundColor: \"#012835\"\r\n      //   }\r\n      // })\r\n\r\n      return cartItems.map((item) =>\r\n        item.cartItemId === product.cartItemId\r\n          ? { ...item, quantity: item.quantity - 1 }\r\n          : item\r\n      );\r\n    }\r\n  }\r\n\r\n  if (action.type === DELETE_FROM_CART) {\r\n\r\n    console.log(product,\" product._id product._id product._id product._id \")\r\n    toast.success(\"Removed from cart\",{\r\n      style:{\r\n        marginBottom: \"40px\",\r\n        backgroundColor: \"#012835\"\r\n      }\r\n    })\r\n    let tempList = [...cartItems]\r\n    let filteredList = tempList.filter(cartItem => cartItem._id !== product._id);\r\n    return [...filteredList]\r\n  }\r\n\r\n  if (action.type === DELETE_ALL_FROM_CART) {\r\n    toast.success(\"Removed all from cart \",{\r\n      style:{\r\n        marginBottom: \"40px\",\r\n        backgroundColor: \"#012835\"\r\n      }\r\n    })\r\n    return cartItems.filter(item => {\r\n      return false;\r\n    });\r\n  }\r\n\r\n  if (action.type === EMPTY_CART) {\r\n    return cartItems.filter(item => {return false});\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default cartReducer;\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getProductsRequestPending: false,\r\n    getProductsSuccess: false,\r\n    getProductsFailure: false,\r\n    getProductsFailurePayload: {},\r\n    products: [],\r\n}\r\n\r\nexport const ssFeaturedProductList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_FEATURED_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                getProductsRequestPending: true,\r\n                getProductsSuccess: false,\r\n                getProductsFailure: false,\r\n            }\r\n        case types.GET_FEATURED_PRODUCTS_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getProductsRequestPending: false,\r\n                getProductsSuccess: true,\r\n                getProductsFailure: false,\r\n                products: action.payload,\r\n            }\r\n        case types.GET_FEATURED_PRODUCTS_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getProductsFailure: true,\r\n                getProductsSuccess: false,\r\n                getProductsRequestPending: false,\r\n                getProductsFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n  ADD_TO_WISHLIST,\r\n  DELETE_FROM_WISHLIST,\r\n  DELETE_ALL_FROM_WISHLIST\r\n} from \"../actions/wishlistActions\";\r\n\r\nconst initState = [];\r\n\r\nconst wishlistReducer = (state = initState, action) => {\r\n  const wishlistItems = state,\r\n    product = action.payload;\r\n\r\n  if (action.type === ADD_TO_WISHLIST) {\r\n    const wishlistItem = wishlistItems.filter(\r\n      item => item.id === product.id\r\n    )[0];\r\n    if (wishlistItem === undefined) {\r\n      return [...wishlistItems, product];\r\n    } else {\r\n      return wishlistItems;\r\n    }\r\n  }\r\n\r\n  if (action.type === DELETE_FROM_WISHLIST) {\r\n    const remainingItems = (wishlistItems, product) =>\r\n      wishlistItems.filter(wishlistItem => wishlistItem.id !== product.id);\r\n    return remainingItems(wishlistItems, product);\r\n  }\r\n\r\n  if (action.type === DELETE_ALL_FROM_WISHLIST) {\r\n    return wishlistItems.filter(item => {\r\n      return false;\r\n    });\r\n  }\r\n\r\n  return wishlistItems;\r\n};\r\n\r\nexport default wishlistReducer;\r\n","import { ADD_TO_COMPARE, DELETE_FROM_COMPARE } from \"../actions/compareActions\";\r\n\r\nconst initState = [];\r\n\r\nconst compareReducer = (state = initState, action) => {\r\n  const compareItems = state,\r\n    product = action.payload;\r\n\r\n  if (action.type === ADD_TO_COMPARE) {\r\n    const compareItem = compareItems.filter(item => item.id === product.id)[0];\r\n    if (compareItem === undefined) {\r\n      return [...compareItems, product];\r\n    } else {\r\n      return compareItems;\r\n    }\r\n  }\r\n\r\n  if (action.type === DELETE_FROM_COMPARE) {\r\n    const remainingItems = (compareItems, product) =>\r\n      compareItems.filter(compareItem => compareItem.id !== product.id);\r\n    return remainingItems(compareItems, product);\r\n  }\r\n\r\n  return compareItems;\r\n};\r\n\r\nexport default compareReducer;\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n  signInRequestPending: false,\r\n  signInSuccess: false,\r\n  signInCookieSet: false,\r\n  signInFailure: false,\r\n  signInFailurePayload: {},\r\n  signInSuccessPayload: {},\r\n}\r\n\r\nexport const ssSignIn = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case types.SIGN_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        signInRequestPending: true,\r\n        signInSuccess: false,\r\n        signInFailure: false,\r\n        signInCookieSet: false,\r\n      }\r\n    case types.SIGN_IN_COOKIE_SET:\r\n      return {\r\n        ...state,\r\n        signInRequestPending: false,\r\n        signInSuccess: true,\r\n        signInCookieSet: true,\r\n        signInFailure: false,\r\n      }\r\n    case types.SIGN_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        signInRequestPending: false,\r\n        signInSuccess: false,\r\n        signInCookieSet: false,\r\n        signInFailurePayload: {},\r\n        signInSuccessPayload: {},\r\n        signInFailure: false,\r\n      }\r\n    case types.SIGN_IN_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signInRequestPending: false,\r\n        signInSuccess: true,\r\n        signInCookieSet: false,\r\n        signInFailure: false,\r\n        signInSuccessPayload: action.payload,\r\n      }\r\n    case types.SIGN_IN_REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        signInFailure: true,\r\n        signInSuccess: false,\r\n        signInCookieSet: false,\r\n        signInRequestPending: false,\r\n        signInFailurePayload: action.payload,\r\n      }\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n  forgotPasswordRequestPending: false,\r\n  forgotPasswordSuccess: false,\r\n  forgotPasswordFailure: false,\r\n  forgotPasswordFailurePayload: {},\r\n  forgotPasswordSuccessPayload: {},\r\n}\r\n\r\nexport const ssForgotPassword = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case types.FORGOT_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequestPending: true,\r\n        forgotPasswordSuccess: false,\r\n        forgotPasswordFailure: false,\r\n        forgotPasswordFailurePayload: {},\r\n        forgotPasswordSuccessPayload: {},\r\n      }\r\n    case types.FORGOT_PASSWORD_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequestPending: false,\r\n        forgotPasswordSuccess: true,\r\n        forgotPasswordFailure: false,\r\n        forgotPasswordFailurePayload: {},\r\n        forgotPasswordSuccessPayload: action.payload\r\n      }\r\n    case types.FORGOT_PASSWORD_REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        forgotPasswordFailure: true,\r\n        forgotPasswordSuccess: false,\r\n        forgotPasswordRequestPending: false,\r\n        forgotPasswordFailurePayload: action.payload,\r\n        forgotPasswordSuccessPayload: {}\r\n      }\r\n    case types.FORGOT_PASSWORD_REQUEST_CLEAR:\r\n      return {\r\n        ...state,\r\n        forgotPasswordRequestPending: false,\r\n        forgotPasswordSuccess: false,\r\n        forgotPasswordFailure: false,\r\n        forgotPasswordFailurePayload: {},\r\n        forgotPasswordSuccessPayload: {},\r\n      }\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n  createNewPasswordRequestPending: false,\r\n  createNewPasswordSuccess: false,\r\n  createNewPasswordFailure: false,\r\n  createNewPasswordFailurePayload: {},\r\n  createNewPasswordSuccessPayload: {},\r\n}\r\n\r\nexport const ssCreateNewPassword = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case types.CREATE_NEW_PASSWORD_REQUEST:\r\n      return {\r\n        ...state,\r\n        createNewPasswordRequestPending: true,\r\n        createNewPasswordSuccess: false,\r\n        createNewPasswordFailure: false,\r\n      }\r\n    case types.CREATE_NEW_PASSWORD_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        createNewPasswordRequestPending: false,\r\n        createNewPasswordSuccess: true,\r\n        createNewPasswordFailure: false,\r\n        createNewPasswordSuccessPayload: action.payload\r\n      }\r\n    case types.CREATE_NEW_PASSWORD_REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        createNewPasswordFailure: true,\r\n        createNewPasswordSuccess: false,\r\n        createNewPasswordRequestPending: false,\r\n        createNewPasswordFailurePayload: action.payload,\r\n      }\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n  validateCreatePasswordLinkRequestPending: false,\r\n  validateCreatePasswordLinkSuccess: false,\r\n  validateCreatePasswordLinkFailure: false,\r\n  validateCreatePasswordLinkFailurePayload: {},\r\n  validateCreatePasswordLinkSuccessPayload: {},\r\n}\r\n\r\nexport const ssValidateCreateNewPassword = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case types.VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST:\r\n      return {\r\n        ...state,\r\n        validateCreatePasswordLinkRequestPending: true,\r\n        validateCreatePasswordLinkSuccess: false,\r\n        validateCreatePasswordLinkFailure: false,\r\n      }\r\n    case types.VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        validateCreatePasswordLinkRequestPending: false,\r\n        validateCreatePasswordLinkSuccess: true,\r\n        validateCreatePasswordLinkFailure: false,\r\n        validateCreatePasswordLinkSuccessPayload: action.payload\r\n      }\r\n    case types.VALIDATE_CREATE_NEW_PASSWORD_LINK_REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        validateCreatePasswordLinkFailure: true,\r\n        validateCreatePasswordLinkSuccess: false,\r\n        validateCreatePasswordLinkRequestPending: false,\r\n        validateCreatePasswordLinkFailurePayload: action.payload,\r\n      }\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n  registerUserRequestPending: false,\r\n  registerUserSuccess: false,\r\n  registerUserFailure: false,\r\n  registerUserFailurePayload: {},\r\n  registerUserSuccessPayload: {},\r\n}\r\n\r\nexport const ssRegisterUser = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case types.REGISTER_USER_REQUEST:\r\n      return {\r\n        ...state,\r\n        registerUserRequestPending: true,\r\n        registerUserSuccess: false,\r\n        registerUserFailure: false,\r\n      }\r\n    case types.REGISTER_USER_REQUEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        registerUserRequestPending: false,\r\n        registerUserSuccess: true,\r\n        registerUserFailure: false,\r\n        registerUserSuccessPayload: action.payload,\r\n      }\r\n    case types.REGISTER_USER_REQUEST_FAILED:\r\n      return {\r\n        ...state,\r\n        registerUserFailure: true,\r\n        registerUserSuccess: false,\r\n        registerUserRequestPending: false,\r\n        registerUserFailurePayload: action.payload,\r\n      }\r\n    default :\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport {ssSignIn} from \"./ssLoginReducer.js\";\r\nimport {ssForgotPassword} from \"./ssForgotPasswordReducer.js\";\r\nimport {ssCreateNewPassword} from \"./ssCreateNewPasswordReducer.js\";\r\nimport {ssValidateCreateNewPassword} from './ssValidateCreatePasswordLinkReducer.js'\r\nimport {ssRegisterUser} from \"./ssRegisterReducer.js\"\r\n\r\nconst authReducers = combineReducers({\r\n  ssSignIn,\r\n  ssRegisterUser,\r\n  ssForgotPassword,\r\n  ssCreateNewPassword,\r\n  ssValidateCreateNewPassword,\r\n})\r\n\r\nexport default authReducers\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getCategoriesRequestPending: false,\r\n    getCategoriesSuccess: false,\r\n    getCategoriesFailure: false,\r\n    getCategoriesFailurePayload: {},\r\n    productCategories: [],\r\n}\r\n\r\nexport const ssCategoryList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_CATEGORIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                getCategoriesRequestPending: true,\r\n                getCategoriesSuccess: false,\r\n                getCategoriesFailure: false,\r\n            }\r\n        case types.GET_CATEGORIES_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getCategoriesRequestPending: false,\r\n                getCategoriesSuccess: true,\r\n                getCategoriesFailure: false,\r\n                productCategories: action.payload,\r\n            }\r\n        case types.GET_CATEGORIES_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getCategoriesFailure: true,\r\n                getCategoriesSuccess: false,\r\n                getCategoriesRequestPending: false,\r\n                getCategoriesFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getSubCategoriesRequestPending: false,\r\n    getSubCategoriesSuccess: false,\r\n    getSubCategoriesFailure: false,\r\n    getSubCategoriesFailurePayload: {},\r\n    productSubCategories: []\r\n}\r\n\r\nexport const ssSubCategoryList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_SUB_CATEGORIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                getSubCategoriesRequestPending: true,\r\n                getSubCategoriesSuccess: false,\r\n                getSubCategoriesFailure: false,\r\n                getSubCategoriesFailurePayload: {},\r\n                productSubCategories: []\r\n            }\r\n        case types.GET_SUB_CATEGORIES_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getSubCategoriesRequestPending: false,\r\n                getSubCategoriesSuccess: true,\r\n                getSubCategoriesFailure: false,\r\n                productSubCategories: action.payload,\r\n            }\r\n        case types.GET_SUB_CATEGORIES_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getSubCategoriesFailure: true,\r\n                getSubCategoriesSuccess: false,\r\n                getSubCategoriesRequestPending: false,\r\n                getSubCategoriesFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getBrandsRequestPending: false,\r\n    getBrandsSuccess: false,\r\n    getBrandsFailure: false,\r\n    getBrandsFailurePayload: {},\r\n    productBrands: [],\r\n}\r\n\r\nexport const ssBrandList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_BRANDS_REQUEST:\r\n            return {\r\n                ...state,\r\n                getBrandsRequestPending: true,\r\n                getBrandsSuccess: false,\r\n                getBrandsFailure: false,\r\n            }\r\n        case types.GET_BRANDS_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getBrandsRequestPending: false,\r\n                getBrandsSuccess: true,\r\n                getBrandsFailure: false,\r\n                productBrands: action.payload,\r\n            }\r\n        case types.GET_BRANDS_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getBrandsFailure: true,\r\n                getBrandsSuccess: false,\r\n                getBrandsRequestPending: false,\r\n                getBrandsFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getProductsRequestPending: false,\r\n    getProductsSuccess: false,\r\n    getProductsFailure: false,\r\n    getProductsFailurePayload: {},\r\n    products: [],\r\n}\r\n\r\nexport const ssProductList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                getProductsRequestPending: true,\r\n                getProductsSuccess: false,\r\n                getProductsFailure: false,\r\n            }\r\n        case types.GET_PRODUCTS_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getProductsRequestPending: false,\r\n                getProductsSuccess: true,\r\n                getProductsFailure: false,\r\n                products: action.payload,\r\n            }\r\n        case types.GET_PRODUCTS_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getProductsFailure: true,\r\n                getProductsSuccess: false,\r\n                getProductsRequestPending: false,\r\n                getProductsFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getCombosRequestPending: false,\r\n    getCombosSuccess: false,\r\n    getCombosFailure: false,\r\n    getCombosFailurePayload: {},\r\n    combos: [],\r\n}\r\n\r\nexport const ssComboList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_COMBOS_REQUEST:\r\n            return {\r\n                ...state,\r\n                getCombosRequestPending: true,\r\n                getCombosSuccess: false,\r\n                getCombosFailure: false,\r\n            }\r\n        case types.GET_COMBOS_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getCombosRequestPending: false,\r\n                getCombosSuccess: true,\r\n                getCombosFailure: false,\r\n                combos: action.payload,\r\n            }\r\n        case types.GET_COMBOS_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getCombosFailure: true,\r\n                getCombosSuccess: false,\r\n                getCombosRequestPending: false,\r\n                getCombosFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import * as types from '../../../utils/actionTypes.js'\r\n\r\nconst initialState = {\r\n    getComboCategoriesRequestPending: false,\r\n    getComboCategoriesSuccess: false,\r\n    getComboCategoriesFailure: false,\r\n    getComboCategoriesFailurePayload: {},\r\n    comboCategories: [],\r\n}\r\n\r\nexport const ssComboCategoriesList = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.GET_COMBO_CATEGORIES_REQUEST:\r\n            return {\r\n                ...state,\r\n                getComboCategoriesRequestPending: true,\r\n                getComboCategoriesSuccess: false,\r\n                getComboCategoriesFailure: false,\r\n            }\r\n        case types.GET_COMBO_CATEGORIES_REQUEST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                getComboCategoriesRequestPending: false,\r\n                getComboCategoriesSuccess: true,\r\n                getComboCategoriesFailure: false,\r\n                comboCategories: action.payload,\r\n            }\r\n        case types.GET_COMBO_CATEGORIES_REQUEST_FAILED:\r\n            return {\r\n                ...state,\r\n                getComboCategoriesFailure: true,\r\n                getComboCategoriesSuccess: false,\r\n                getComboCategoriesRequestPending: false,\r\n                getComboCategoriesFailurePayload: action.payload,\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","import {ssCartReducers} from \"./cart\";\r\nimport {ssSingleCombo} from \"./combo/ssSingleComboReducer.js\";\r\nimport currencyReducer from \"./currencyReducer\";\r\nimport {ssSingleProduct} from \"./product/ssSingleProductReducer.js\";\r\nimport productReducer from \"./productReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport {ssFeaturedProductList} from \"./products/ssFeaturedProductsReducer.js\";\r\nimport wishlistReducer from \"./wishlistReducer\";\r\nimport compareReducer from \"./compareReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createMultilanguageReducer } from \"redux-multilanguage\";\r\nimport authReducer from \"./auth/index.js\"\r\nimport {ssCategoryList} from \"./categories/ssCategoriesReducer.js\"\r\nimport {ssSubCategoryList} from \"./subCategories/ssSubCategoriesReducer.js\"\r\nimport {ssBrandList} from \"./brands/ssBrandsReducer.js\"\r\nimport {ssProductList} from \"./products/ssProductsReducer.js\"\r\nimport {ssComboList} from \"./combos/ssCombosReducer.js\"\r\nimport {ssComboCategoriesList} from \"./comboCategories/ssComboCategoriesReducer.js\"\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  multilanguage: createMultilanguageReducer({ currentLanguageCode: \"en\" }),\r\n  currencyData: currencyReducer,\r\n  productData: productReducer,\r\n  cartData: cartReducer,\r\n  auth: authReducer,\r\n  categories: ssCategoryList,\r\n  subCategories: ssSubCategoryList,\r\n  brands: ssBrandList,\r\n  products: ssProductList,\r\n  combos: ssComboList,\r\n  ssCart: ssCartReducers,\r\n  comboCategories: ssComboCategoriesList,\r\n  singleProduct: ssSingleProduct,\r\n  singleCombo: ssSingleCombo,\r\n  featuredProducts: ssFeaturedProductList,\r\n  wishlistData: wishlistReducer,\r\n  compareData: compareReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = props => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  return props.children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useEffect, Suspense, lazy } from \"react\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport {\r\n  SSAuthenticatedRoute,\r\n  SSUnAuthenticatedRoute,\r\n} from \"./components/HOC/ssUserAuthRoutes.js\";\r\nimport ScrollToTop from \"./helpers/scroll-top\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\nimport { multilanguage, loadLanguages } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nimport { BreadcrumbsProvider } from \"react-breadcrumbs-dynamic\";\r\nimport { renderToast } from \"./utils/renderToast.js\";\r\n\r\n// home pages\r\nconst HomeFashion = lazy(() => import(\"./pages/home/ssHome.js\"));\r\nconst BrandsList = lazy(() => import(\"./pages/brands/ssBrandList.js\"));\r\nconst CombosGridLayout = lazy(() => import(\"./pages/combos/ssComboList.js\"));\r\nconst ProductGridLayout = lazy(() => import(\"./pages/products/ssProductList\"));\r\n\r\nconst HomeFashionTwo = lazy(() => import(\"./pages/home/HomeFashionTwo\"));\r\nconst HomeFashionThree = lazy(() => import(\"./pages/home/HomeFashionThree\"));\r\nconst HomeFashionFour = lazy(() => import(\"./pages/home/HomeFashionFour\"));\r\nconst HomeFashionFive = lazy(() => import(\"./pages/home/HomeFashionFive\"));\r\nconst HomeFashionSix = lazy(() => import(\"./pages/home/HomeFashionSix\"));\r\nconst HomeFashionSeven = lazy(() => import(\"./pages/home/HomeFashionSeven\"));\r\nconst HomeKidsFashion = lazy(() => import(\"./pages/home/HomeKidsFashion\"));\r\nconst HomeCosmetics = lazy(() => import(\"./pages/home/HomeCosmetics\"));\r\nconst HomeFurniture = lazy(() => import(\"./pages/home/HomeFurniture\"));\r\nconst HomeFurnitureTwo = lazy(() => import(\"./pages/home/HomeFurnitureTwo\"));\r\nconst HomeFurnitureThree = lazy(() =>\r\n  import(\"./pages/home/HomeFurnitureThree\")\r\n);\r\nconst HomeElectronics = lazy(() => import(\"./pages/home/HomeElectronics\"));\r\nconst HomeElectronicsTwo = lazy(() =>\r\n  import(\"./pages/home/HomeElectronicsTwo\")\r\n);\r\nconst HomeBookStore = lazy(() => import(\"./pages/home/HomeBookStore\"));\r\nconst HomePlants = lazy(() => import(\"./pages/home/HomePlants\"));\r\nconst HomeFlowerShop = lazy(() => import(\"./pages/home/HomeFlowerShop\"));\r\nconst HomeOrganicFood = lazy(() => import(\"./pages/home/HomeOrganicFood\"));\r\nconst HomeOrganicFoodTwo = lazy(() =>\r\n  import(\"./pages/home/HomeOrganicFoodTwo\")\r\n);\r\nconst HomeOnepageScroll = lazy(() => import(\"./pages/home/HomeOnepageScroll\"));\r\nconst HomeGridBanner = lazy(() => import(\"./pages/home/HomeGridBanner\"));\r\nconst HomeAutoParts = lazy(() => import(\"./pages/home/HomeAutoParts\"));\r\nconst HomeCakeShop = lazy(() => import(\"./pages/home/HomeCakeShop\"));\r\nconst HomeHandmade = lazy(() => import(\"./pages/home/HomeHandmade\"));\r\nconst HomePetFood = lazy(() => import(\"./pages/home/HomePetFood\"));\r\n\r\n// shop pages\r\nconst ShopGridStandard = lazy(() => import(\"./pages/shop/ShopGridStandard\"));\r\nconst ShopGridFilter = lazy(() => import(\"./pages/shop/ShopGridFilter\"));\r\nconst ShopGridTwoColumn = lazy(() => import(\"./pages/shop/ShopGridTwoColumn\"));\r\nconst ShopGridNoSidebar = lazy(() => import(\"./pages/shop/ShopGridNoSidebar\"));\r\nconst ShopGridFullWidth = lazy(() => import(\"./pages/shop/ShopGridFullWidth\"));\r\nconst ShopGridRightSidebar = lazy(() =>\r\n  import(\"./pages/shop/ShopGridRightSidebar\")\r\n);\r\nconst ShopListStandard = lazy(() => import(\"./pages/shop/ShopListStandard\"));\r\nconst ShopListFullWidth = lazy(() => import(\"./pages/shop/ShopListFullWidth\"));\r\nconst ShopListTwoColumn = lazy(() => import(\"./pages/shop/ShopListTwoColumn\"));\r\n\r\n// product pages\r\nconst Product = lazy(() => import(\"./pages/shop-product/Product\"));\r\nconst Combo = lazy(() => import(\"./pages/shop-product/Combo.js\"));\r\nconst ProductTabLeft = lazy(() =>\r\n  import(\"./pages/shop-product/ProductTabLeft\")\r\n);\r\nconst ProductTabRight = lazy(() =>\r\n  import(\"./pages/shop-product/ProductTabRight\")\r\n);\r\nconst ProductSticky = lazy(() => import(\"./pages/shop-product/ProductSticky\"));\r\nconst ProductSlider = lazy(() => import(\"./pages/shop-product/ProductSlider\"));\r\nconst ProductFixedImage = lazy(() =>\r\n  import(\"./pages/shop-product/ProductFixedImage\")\r\n);\r\n\r\n// blog pages\r\nconst BlogStandard = lazy(() => import(\"./pages/blog/BlogStandard\"));\r\nconst BlogNoSidebar = lazy(() => import(\"./pages/blog/BlogNoSidebar\"));\r\nconst BlogRightSidebar = lazy(() => import(\"./pages/blog/BlogRightSidebar\"));\r\nconst BlogDetailsStandard = lazy(() =>\r\n    import(\"./pages/blog/BlogDetailsStandard\")\r\n);\r\n\r\n// other pages\r\nconst About = lazy(() => import(\"./pages/other/About\"));\r\nconst Terms = lazy(() => import(\"./pages/other/terms\"));\r\nconst Contact = lazy(() => import(\"./pages/other/Contact\"));\r\nconst MyAccount = lazy(() => import(\"./pages/my-account/index.js\"));\r\n// const MyAccountOrder = lazy(() => import(\"./pages/my-account/UserAccountOrders.js\"));\r\nconst Login = lazy(() => import(\"./pages/other/login/ssLogin.js\"));\r\nconst GuestCheckout = lazy(() => import(\"./pages/other/guestCheckout.js\"))\r\nconst Register = lazy(() => import(\"./pages/other/register/ssRegister.js\"));\r\nconst ForgotPassword = lazy(() => import(\"./pages/other/forgotPassword/ssForgotPassword.js\"));\r\nconst CreatePassword = lazy(() => import(\"./pages/other/createPassword/ssCreatePassword.js\"));\r\nconst LoginCheckout = lazy(() => import(\"./pages/other/LoginCheckout.js\"));\r\n\r\nconst Cart = lazy(() => import(\"./pages/other/Cart\"));\r\nconst Wishlist = lazy(() => import(\"./pages/other/Wishlist\"));\r\nconst Compare = lazy(() => import(\"./pages/other/Compare\"));\r\nconst Checkout = lazy(() => import(\"./pages/other/Checkout\"));\r\n\r\nconst NotFound = lazy(() => import(\"./pages/other/NotFound\"));\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.dispatch(\r\n      loadLanguages({\r\n        languages: {\r\n          en: require(\"./translations/english.json\"),\r\n          fn: require(\"./translations/french.json\"),\r\n          de: require(\"./translations/germany.json\"),\r\n        },\r\n      })\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ToastProvider placement=\"bottom-left\">\r\n      <div>\r\n        {renderToast()}\r\n        </div>\r\n      <BreadcrumbsProvider>\r\n        <Router>\r\n          <ScrollToTop>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flone-preloader-wrapper\">\r\n                  <div id=\"circle2\" />\r\n                </div>\r\n              }\r\n            >\r\n              <Switch>\r\n                <Route exact path={\"/\"} component={HomeFashion} />\r\n\r\n                <Route exact path={\"/combos\"} component={CombosGridLayout} />\r\n\r\n                <Route\r\n                  path={\"/combos/:comboCategoryId\"}\r\n                  component={CombosGridLayout}\r\n                />\r\n\r\n                <Route exact path={\"/products\"} component={ProductGridLayout} />\r\n\r\n                <Route\r\n                  path={\"/products/:categoryId\"}\r\n                  component={ProductGridLayout}\r\n                />\r\n\r\n                <Route\r\n                  path={\"/product/:id\"}\r\n                  render={(routeProps) => (\r\n                    <Product {...routeProps} key={routeProps.match.params.id} />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path={\"/combo/:id\"}\r\n                  render={(routeProps) => (\r\n                    <Combo {...routeProps} key={routeProps.match.params.id} />\r\n                  )}\r\n                />\r\n\r\n                <Route exact path={\"/brands\"} component={BrandsList} />\r\n\r\n                <SSUnAuthenticatedRoute path={\"/login\"} component={Login} />\r\n\r\n                <SSUnAuthenticatedRoute path={\"/checkout-as-guest\"} component={GuestCheckout}/>\r\n\r\n                <SSAuthenticatedRoute\r\n                  path={\"/my-account/\"}\r\n                  component={MyAccount}\r\n                />\r\n\r\n                {/*<SSAuthenticatedRoute*/}\r\n                {/*  path={\"/my-account/orders\"}*/}\r\n                {/*  component={MyAccountOrder}*/}\r\n                {/*/>*/}\r\n\r\n                <SSUnAuthenticatedRoute\r\n                  path={\"/create-account\"}\r\n                  component={Register}\r\n                />\r\n\r\n                <SSUnAuthenticatedRoute\r\n                  path={\"/forgot-password\"}\r\n                  component={ForgotPassword}\r\n                />\r\n\r\n                <SSUnAuthenticatedRoute\r\n                  path={\"/create-password\"}\r\n                  component={CreatePassword}\r\n                />\r\n\r\n                <Route exact path={\"/about\"} component={About} />\r\n\r\n                <Route exact path={\"/contact\"} component={Contact} />\r\n\r\n                <Route exact path={\"/terms-of-sale\"} component={Terms} />\r\n\r\n                <Route path={\"/login-guest-check\"} component={LoginCheckout} />\r\n                <Route path={\"/cart\"} component={Cart} />\r\n                <Route path={\"/checkout\"} component={Checkout} />\r\n\r\n                <Route exact path={\"/not-found\"} component={NotFound} />\r\n                \r\n                <Route exact component={NotFound} />\r\n              </Switch>\r\n            </Suspense>\r\n          </ScrollToTop>\r\n        </Router>\r\n      </BreadcrumbsProvider>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  dispatch: PropTypes.func,\r\n};\r\n\r\nexport default connect()(multilanguage(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport { ParallaxProvider } from \"react-scroll-parallax/cjs\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { save, load } from \"redux-localstorage-simple\";\r\nimport { Provider } from \"react-redux\";\r\nimport { fetchProducts } from \"./redux/actions/productActions\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\nimport products from \"./data/products.json\";\r\nimport App from \"./App\";\r\nimport \"./assets/scss/style.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  load(),\r\n  composeWithDevTools(applyMiddleware(thunk, save()))\r\n);\r\n\r\n// fetch products from json file\r\nstore.dispatch(fetchProducts(products));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ParallaxProvider>\r\n      <App />\r\n    </ParallaxProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import Cookies from \"js-cookie\";\r\nimport queryString from \"query-string\";\r\nimport React, {Suspense} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport {withRouter} from \"react-router\";\r\nimport {ssClientAuthFlagCookieKey} from \"../../utils/constants.js\";\r\nimport {isObjectEmpty} from \"../../utils/commonUtils.js\";\r\n\r\nconst AuthRouteConfig = ({ component: Component, fullLayout, ...rest }) => {\r\n    const isAuthenticated = Cookies.get(ssClientAuthFlagCookieKey)\r\n    console.log(rest,\"rest rest rest rest rest rest rest rest \")\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                (isAuthenticated && isAuthenticated === 'true')\r\n                    ?\r\n                    <>\r\n                        <Component {...props} />\r\n                    </>\r\n                    : <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nconst UnAuthRouteConfig = ({ component: Component, ...rest }) => {\r\n    const isAuthenticated = Cookies.get(ssClientAuthFlagCookieKey)\r\n    console.log(rest,\"rest rest rest rest rest rest rest rest \")\r\n    if (rest.location.pathname === '/login' || rest.location.pathname === '/forgot-password' || rest.location.pathname === \"/create-account\" ) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) =>\r\n                    (isAuthenticated && isAuthenticated === 'true')\r\n                        ? <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n                        : <Component {...props} />\r\n                }\r\n            />\r\n        )\r\n    }\r\n    else if (rest.location.pathname === \"/create-password\") {\r\n        const queryParams=queryString.parse(rest.location.search);\r\n        console.log(queryParams,\"!queryParams !queryParams !queryParams !queryParams !queryParams !queryParams !queryParams \")\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) =>\r\n                    ((isAuthenticated && isAuthenticated === 'true') || (isObjectEmpty(queryParams)))\r\n                        ? <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n                        : <Component {...props} />\r\n                }\r\n            />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={(props) =>\r\n                    <Component {...props} />\r\n                }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n//         user: state.auth.login.userRole\r\n//     }\r\n// }\r\n\r\n// export const SSAuthenticatedRoute = withRouter(connect(mapStateToProps)(AuthRouteConfig))\r\n\r\nexport const SSAuthenticatedRoute = withRouter(connect(null)(AuthRouteConfig))\r\n\r\n\r\nexport const SSUnAuthenticatedRoute = withRouter(connect(null)(UnAuthRouteConfig))\r\n\r\n// export const SSLoginProtectedRoute = withRouter(connect(mapStateToProps)(ssLoginRouteConfig()))\r\n","export const ADD_TO_WISHLIST = \"ADD_TO_WISHLIST\";\r\nexport const DELETE_FROM_WISHLIST = \"DELETE_FROM_WISHLIST\";\r\nexport const DELETE_ALL_FROM_WISHLIST = \"DELETE_ALL_FROM_WISHLIST\";\r\n\r\n// add to wishlist\r\nexport const addToWishlist = (item, addToast) => {\r\n  return dispatch => {\r\n    console.log(\"add toast add toast add toast add toast \",addToast)\r\n    if (addToast) {\r\n      addToast(\"Added To Wishlist\", {\r\n        appearance: \"success\",\r\n        autoDismiss: true\r\n      });\r\n    }\r\n    dispatch({ type: ADD_TO_WISHLIST, payload: item });\r\n  };\r\n};\r\n\r\n// delete from wishlist\r\nexport const deleteFromWishlist = (item, addToast) => {\r\n  return dispatch => {\r\n    if (addToast) {\r\n      addToast(\"Removed From Wishlist\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true\r\n      });\r\n    }\r\n    dispatch({ type: DELETE_FROM_WISHLIST, payload: item });\r\n  };\r\n};\r\n\r\n//delete all from wishlist\r\nexport const deleteAllFromWishlist = addToast => {\r\n  return dispatch => {\r\n    if (addToast) {\r\n      addToast(\"Removed All From Wishlist\", {\r\n        appearance: \"error\",\r\n        autoDismiss: true\r\n      });\r\n    }\r\n    dispatch({ type: DELETE_ALL_FROM_WISHLIST });\r\n  };\r\n};\r\n"],"sourceRoot":""}